{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/algorithms/algorithms.component.html","webpack:///./src/app/algorithms/algorithms.component.scss","webpack:///./src/app/algorithms/algorithms.component.ts","webpack:///./src/app/algorithms/algorithms.service.ts","webpack:///./src/app/analyze/analyze.component.html","webpack:///./src/app/analyze/analyze.component.scss","webpack:///./src/app/analyze/analyze.component.ts","webpack:///./src/app/analyze/analyze.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/app/data-tab/data-tab.component.html","webpack:///./src/app/data-tab/data-tab.component.scss","webpack:///./src/app/data-tab/data-tab.component.ts","webpack:///./src/app/data-tab/data-tab.service.ts","webpack:///./src/app/dataset/dataset.component.html","webpack:///./src/app/dataset/dataset.component.scss","webpack:///./src/app/dataset/dataset.component.ts","webpack:///./src/app/dataset/dataset.service.ts","webpack:///./src/app/dialogs/add-algorithm/add-algorithm.component.html","webpack:///./src/app/dialogs/add-algorithm/add-algorithm.component.scss","webpack:///./src/app/dialogs/add-algorithm/add-algorithm.component.ts","webpack:///./src/app/dialogs/add-algorithm/add-algorithm.service.ts","webpack:///./src/app/dialogs/add-dataset/add-dataset.component.html","webpack:///./src/app/dialogs/add-dataset/add-dataset.component.scss","webpack:///./src/app/dialogs/add-dataset/add-dataset.component.ts","webpack:///./src/app/dialogs/add-value/add-value.component.html","webpack:///./src/app/dialogs/add-value/add-value.component.scss","webpack:///./src/app/dialogs/add-value/add-value.component.ts","webpack:///./src/app/dialogs/addProject/add.component.html","webpack:///./src/app/dialogs/addProject/add.component.scss","webpack:///./src/app/dialogs/addProject/add.component.ts","webpack:///./src/app/dialogs/addProject/addProject.service.ts","webpack:///./src/app/dialogs/copyProject/copy.component.html","webpack:///./src/app/dialogs/copyProject/copy.component.scss","webpack:///./src/app/dialogs/copyProject/copy.component.ts","webpack:///./src/app/dialogs/copyProject/copyProject.service.ts","webpack:///./src/app/dialogs/data-tab-view/data-tab-view.component.html","webpack:///./src/app/dialogs/data-tab-view/data-tab-view.component.scss","webpack:///./src/app/dialogs/data-tab-view/data-tab-view.component.ts","webpack:///./src/app/dialogs/dataset-detail/dataset-detail.component.html","webpack:///./src/app/dialogs/dataset-detail/dataset-detail.component.scss","webpack:///./src/app/dialogs/dataset-detail/dataset-detail.component.ts","webpack:///./src/app/dialogs/delete/delete.component.html","webpack:///./src/app/dialogs/delete/delete.component.scss","webpack:///./src/app/dialogs/delete/delete.component.ts","webpack:///./src/app/dialogs/edit-algorithm/edit-algorithm.component.html","webpack:///./src/app/dialogs/edit-algorithm/edit-algorithm.component.scss","webpack:///./src/app/dialogs/edit-algorithm/edit-algorithm.component.ts","webpack:///./src/app/dialogs/edit-algorithm/edit-algorithm.service.ts","webpack:///./src/app/dialogs/view-algorithm/view-algorithm.component.html","webpack:///./src/app/dialogs/view-algorithm/view-algorithm.component.scss","webpack:///./src/app/dialogs/view-algorithm/view-algorithm.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/one-project/one-project.component.html","webpack:///./src/app/one-project/one-project.component.scss","webpack:///./src/app/one-project/one-project.component.ts","webpack:///./src/app/project-overview/project-overview.component.html","webpack:///./src/app/project-overview/project-overview.component.scss","webpack:///./src/app/project-overview/project-overview.component.ts","webpack:///./src/app/project-overview/project.overview.service.ts","webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/projects/projects.component.scss","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/app/projects/projects.service.ts","webpack:///./src/app/shared/guards/auth.guard.ts","webpack:///./src/app/shared/modules/material.module.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/shared.service.ts","webpack:///./src/app/shared/services/snackbar.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div id=\\\"algorithms\\\" class=\\\"flex column center\\\">\\r\\n  <div class=\\\"button-wrapper\\\">\\r\\n    <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"Add Algorithm\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openAddDialog()\\\">\\r\\n      <i class=\\\"material-icons\\\">add</i>\\r\\n    </button>\\r\\n  </div>\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n    <!-- Name -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Algorithm Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.algorithmName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Description -->\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <div class=\\\"justify\\\">{{element.description}} </div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Library -->\\r\\n    <ng-container matColumnDef=\\\"library\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Library </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.library}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <div class=\\\"flex icons-wrapper\\\">\\r\\n          <i class=\\\"material-icons edit-icon\\\" matTooltip=\\\"Edit Algorithm\\\" (click)=\\\"openEditDialog(element)\\\">\\r\\n            border_color\\r\\n          </i>\\r\\n          <i class=\\\"material-icons view-icon\\\" matTooltip=\\\"View Algorithm\\\" (click)=\\\"openViewDialog(element)\\\">\\r\\n            visibility\\r\\n          </i>\\r\\n        </div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#algorithms table.mat-table {\\n  margin-top: 30px;\\n  width: 80%; }\\n\\n#algorithms tr.mat-header-row {\\n  background: linear-gradient(to right, #311B92, #7C4DFF); }\\n\\n#algorithms th.mat-header-cell {\\n  width: 250px;\\n  color: #fff; }\\n\\n#algorithms td.mat-cell {\\n  padding: 10px 10px 10px 0 !important; }\\n\\n#algorithms td.mat-cell:first-child, #algorithms td.mat-footer-cell:first-child, #algorithms th.mat-header-cell:first-child {\\n  padding-left: 24px !important; }\\n\\n#algorithms .button-wrapper {\\n  width: 80%;\\n  margin-top: 100px; }\\n\\n#algorithms .button-wrapper > button {\\n  float: right; }\\n\\n#algorithms .icons-wrapper {\\n  align-items: flex-start;\\n  justify-content: flex-start; }\\n\\n#algorithms .view-icon, #algorithms .edit-icon {\\n  color: #311B92;\\n  font-size: 22px;\\n  margin-right: 15px; }\\n\\n#algorithms .view-icon:hover, #algorithms .edit-icon:hover {\\n  color: #FF3D00;\\n  cursor: pointer; }\\n\\n#algorithms .view-icon {\\n  font-size: 24px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AlgorithmsService } from './algorithms.service';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AddAlgorithmComponent } from '../dialogs/add-algorithm/add-algorithm.component';\r\nimport { ViewAlgorithmComponent } from '../dialogs/view-algorithm/view-algorithm.component';\r\nimport { EditAlgorithmComponent } from '../dialogs/edit-algorithm/edit-algorithm.component';\r\n\r\n@Component({\r\n  selector: 'app-algorithms',\r\n  templateUrl: './algorithms.component.html',\r\n  styleUrls: ['./algorithms.component.scss']\r\n})\r\nexport class AlgorithmsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'description', 'library', 'actions'];\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  constructor(public service: AlgorithmsService, public dialog: MatDialog) { }\r\n\r\n  data: any;\r\n\r\n  getAll() {\r\n    this.service.getAll()\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.dataSource = new MatTableDataSource(res['data']);\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      );\r\n  }\r\n\r\n  openAddDialog() {\r\n    const dialogRef = this.dialog.open(AddAlgorithmComponent, {\r\n      width: '800px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(results => {\r\n      this.getAll();\r\n    });\r\n  }\r\n\r\n  openViewDialog(obj) {\r\n    const dialogRef = this.dialog.open(ViewAlgorithmComponent, {\r\n      width: '800px',\r\n      data: obj\r\n    });\r\n    // dialogRef.afterClosed().subscribe(results => {\r\n    //   this.getAll();\r\n    // });\r\n  }\r\n  openEditDialog(obj) {\r\n    const dialogRef = this.dialog.open(EditAlgorithmComponent, {\r\n      width: '800px',\r\n      data: obj\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  // applyFilter(filterValue: string) {\r\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n  // if (this.dataSource.paginator) {\r\n  //   this.dataSource.paginator.firstPage();\r\n  // }\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AlgorithmsService {\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    baseUrl = '/CustomerProfiling/rest/algorithms';\r\n\r\n    getAll() {\r\n        return this._http.get(this.baseUrl);\r\n    }\r\n\r\n    geAlgorithm(id) {\r\n        return this._http.get(this.baseUrl + '/' + id);\r\n    }\r\n}","module.exports = \"<div class=\\\"selectAlgorithm\\\">\\r\\n    <h4>Select Algorithm:</h4>\\r\\n    <div *ngIf=\\\"initialAlgorithm != null\\\">\\r\\n        <mat-form-field>\\r\\n            <mat-select [(ngModel)]=\\\"initialAlgorithm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Select Algorithm\\\" (selectionChange)=\\\"getParameters($event.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let algorithm of algorithms\\\" [value]=\\\"algorithm\\\">\\r\\n                    {{algorithm.algorithmName}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <h4>Algorithm Details:</h4>\\r\\n        <div class=\\\"algorithmDetails\\\">\\r\\n            <label class=\\\"labels\\\">\\r\\n                <strong class=\\\"name\\\">Algorithm Name:</strong> {{initialAlgorithm.algorithmName}}</label>\\r\\n            <label class=\\\"labels bottomLabel\\\">\\r\\n                <strong class=\\\"desc\\\">Algorithm Description:</strong> {{initialAlgorithm.description}}</label>\\r\\n            <table *ngIf=\\\"parameters.length != 0\\\" mat-table [dataSource]=\\\"parameters\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <ng-container matColumnDef=\\\"parameterName\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Parameter Name </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.parameterName}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"parameterValueType\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Parameter Value Type </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.parameterValueType}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"parameterValue\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Parameter Value </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.parameterValues[0] != null ? element.parameterValues[0].value : element.parameterValues[0].value}}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"actions\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Add Value</th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element let i = index\\\">\\r\\n                        <i matTooltip=\\\"Add value\\\" (click)=\\\"addValue(element, i)\\\" matTooltipPosition=\\\"above\\\" class=\\\"material-icons table-icons\\\"> add </i>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addAlgorithm()\\\">Add</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"selectAlgorithm\\\" *ngIf=\\\"this.listOfAlgorithms\\\">\\r\\n    <div class=\\\"flex list-box\\\">\\r\\n        <div class=\\\"flex column\\\">\\r\\n            <div class=\\\"algorithm-list\\\" *ngFor=\\\"let algorithm of listOfAlgorithms; let i = index\\\">\\r\\n                <div class=\\\"flex space-between algorithm-list-item\\\">\\r\\n                    <span>{{algorithm.algorithmName}}</span>\\r\\n                    <span>\\r\\n                        <i (click)=\\\"editParams(algorithm.parameters, i)\\\" class=\\\"material-icons\\\">border_color</i>\\r\\n                        <i (click)=\\\"deleteAlgorithm(algorithm.id, algorithm.algorithmName)\\\" class=\\\"material-icons\\\">delete</i>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"flex column status-container\\\">\\r\\n            <div *ngIf=\\\"status\\\" class=\\\"status-box flex center\\\">\\r\\n                {{status}}\\r\\n            </div>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"analyze()\\\">Analyze</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n.selectAlgorithm {\\n  border: ridge;\\n  border-width: 1px;\\n  border-color: #757575;\\n  margin-left: 15%;\\n  margin-right: 15%;\\n  margin-top: 2%;\\n  margin-bottom: 5%; }\\n\\nh4 {\\n  margin-left: 15px; }\\n\\n.mat-form-field {\\n  margin-left: 40px; }\\n\\n.labels {\\n  padding-left: 35px; }\\n\\n.algorithmDetails {\\n  background: #fafafa;\\n  display: -ms-grid;\\n  display: grid; }\\n\\n.name {\\n  padding-right: 48px; }\\n\\n.desc {\\n  padding-right: 10px; }\\n\\n.bottomLabel {\\n  margin-top: 20px; }\\n\\ntable {\\n  border-spacing: 0;\\n  margin: 40px; }\\n\\n.algorithm-list {\\n  padding: 20px; }\\n\\n.algorithm-list-item {\\n  color: #311B92;\\n  font-weight: bold;\\n  margin: 10px 0; }\\n\\n.status-container {\\n  justify-content: center;\\n  align-items: flex-end;\\n  padding-right: 20px; }\\n\\n.status-box {\\n  padding: 15px;\\n  border: 1px solid #311B92;\\n  width: 50%;\\n  height: 25px;\\n  margin-bottom: 30px;\\n  font-weight: bold;\\n  color: #311B92; }\\n\\n.list-box > div {\\n  width: 50%; }\\n\"","import { element } from 'protractor';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AddValueComponent } from './../dialogs/add-value/add-value.component';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AnalyzeService } from './analyze.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SharedService } from '../shared/services/shared.service';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\nimport { DeleteComponent } from '../dialogs/delete/delete.component';\r\nimport { interval, UnsubscriptionError } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-analyze',\r\n  templateUrl: './analyze.component.html',\r\n  styleUrls: ['./analyze.component.scss']\r\n})\r\nexport class AnalyzeComponent implements OnInit {\r\n\r\n  constructor(private _analyzeService: AnalyzeService, private _formBuilder: FormBuilder, private _dialog: MatDialog, public sharedService: SharedService, public snackbar: SnackBarService) { }\r\n\r\n  private algorithms;\r\n  private projectId: number;\r\n  private initialAlgorithm;\r\n  private parameters = [];\r\n  private listOfAlgorithms: any;\r\n  private displayedColumns: string[] = ['parameterName', 'parameterValueType', 'parameterValue', 'actions'];\r\n  private selectedAlgorithms = [];\r\n  private status: String;\r\n  private refreshInterval$ = interval(5000);\r\n\r\n  getParameters(algorithm) {\r\n    console.log(this.parameters);\r\n    this.parameters = [];\r\n    algorithm.parameters.forEach(element => {\r\n      this.parameters.push(element);\r\n      console.log(element);\r\n      // console.log(element.parameterValues[0]);\r\n    });\r\n    console.log(this.parameters);\r\n  }\r\n\r\n  getAlgorithms() {\r\n    this._analyzeService.getAlgorithms(this.projectId).subscribe(res => {\r\n      this.algorithms = JSON.parse(res.text()).data;\r\n      console.log(this.algorithms);\r\n    },\r\n      err => {\r\n        this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n      }, () => {\r\n        if (this.algorithms.length > 0) {\r\n          this.initialAlgorithm = this.algorithms[0];\r\n          console.log(this.initialAlgorithm);\r\n          this.getParameters(this.initialAlgorithm);\r\n        }\r\n      });\r\n  }\r\n\r\n  getListOfAlgorithms() {\r\n    this._analyzeService.getListOfAlgorithms(this.projectId)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.listOfAlgorithms = res['data'];\r\n        },\r\n        err => console.log(err)\r\n      )\r\n  }\r\n\r\n  addValue(element, i) {\r\n    const dialogRef = this._dialog.open(AddValueComponent, {\r\n      width: '850px',\r\n      data: { type: 'addValueDialog', value: element.parameterValues[0].value }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log(result);\r\n        this.parameters[i].parameterValues[0] = result;\r\n      }\r\n    });\r\n  }\r\n\r\n  editParams(params, algorithmIndex) {\r\n    const dialogRef = this._dialog.open(AddValueComponent, {\r\n      width: '850px',\r\n      data: { type: 'editParams', data: params }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.listOfAlgorithms[algorithmIndex]['parameters'] = result;\r\n\r\n        this._analyzeService.saveParams(this.listOfAlgorithms[algorithmIndex])\r\n          .subscribe(\r\n            res => {\r\n              // console.log(res);\r\n              this.snackbar.openSnackBar('Parameters updated.', 'Success');\r\n            },\r\n            err => {\r\n              console.log(err);\r\n              this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteAlgorithm(id, name) {\r\n    const dialogRef = this._dialog.open(DeleteComponent, {\r\n      width: '500px',\r\n      data: { type: \"algorithm\", value: name }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res == true) {\r\n        this._analyzeService.deleteAlgorithm(this.projectId, id)\r\n          .subscribe(\r\n            res => {\r\n              // console.log(res);\r\n              this.getListOfAlgorithms();\r\n              this.snackbar.openSnackBar('Successfully deleted.', 'Success');\r\n            },\r\n            err => {\r\n              console.log(err);\r\n              this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n            }\r\n          )\r\n      }\r\n    });\r\n  }\r\n\r\n  // SAVE button\r\n  addAlgorithm() {\r\n    console.log(this.initialAlgorithm);\r\n    this._analyzeService.save(this.projectId, this.initialAlgorithm)\r\n      .subscribe(\r\n        res => {\r\n          this.getListOfAlgorithms();\r\n          this.getAlgorithms();\r\n          this.getStatus();\r\n          // console.log(res);\r\n          this.snackbar.openSnackBar('Successfully saved.', 'Success');\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n        }\r\n      )\r\n  }\r\n\r\n  getStatus() {\r\n    console.log(\"lala\");\r\n    this._analyzeService.status(this.projectId)\r\n      .subscribe(\r\n        res => {\r\n          // console.log(res);\r\n          this.status = res['data'];\r\n        },\r\n        err => console.log(err)\r\n      );\r\n  }\r\n\r\n  analyze() {\r\n    this._analyzeService.analyze(this.projectId, this.listOfAlgorithms)\r\n      .subscribe(\r\n        res => {\r\n          // console.log(res)\r\n          this.snackbar.openSnackBar(res['data'], 'Success');\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.snackbar.openSnackBar(err['data'], 'Error');\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.projectId = this.sharedService.getProjectId();\r\n    this.getAlgorithms();\r\n    this.getListOfAlgorithms();\r\n    this.getStatus();\r\n\r\n    // Get Status every 5 seconds\r\n    this.refreshInterval$.subscribe(() =>\r\n      this.getStatus()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    // TO DO\r\n    // Stop getting Status every 5 seconds\r\n  }\r\n}\r\n\r\n","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalyzeService {\r\n\r\n  constructor(private _http: Http) { }\r\n\r\n  baseUrl = 'rest/algorithms/';\r\n\r\n  // Get All Algorithms\r\n  getAlgorithms(projectId) {\r\n    return this._http.get(this.baseUrl + 'filtered/project/' + projectId);\r\n  }\r\n\r\n  // Save\r\n  save(projectId, obj) {\r\n    return this._http.post(this.baseUrl + 'save/project/' + projectId, obj);\r\n  }\r\n\r\n  // List of Algorithms\r\n  getListOfAlgorithms(projectId) {\r\n    return this._http.get(this.baseUrl + 'project/' + projectId).pipe(map(res => res.json()));\r\n  }\r\n\r\n  // Delete Algorithm\r\n  deleteAlgorithm(projectId, algorithmId) {\r\n    return this._http.get(this.baseUrl + 'remove/project/' + projectId + '?algorithmId=' + algorithmId);\r\n  }\r\n\r\n  // Save Parameters\r\n  saveParams(obj) {\r\n    return this._http.put(this.baseUrl + 'parameters', obj);\r\n  }\r\n\r\n  // Status request\r\n  status(projectId) {\r\n    return this._http.get(this.baseUrl + 'status?projectId=' + projectId).pipe(map(res => res.json()));\r\n  }\r\n\r\n  // Analyze\r\n  analyze(projectId, obj) {\r\n    return this._http.post(this.baseUrl + 'analyze?projectId=' + projectId, obj).pipe(map(res => res.json()));\r\n\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"header\\\">\\r\\n    <a routerLink=\\\"/dashboard\\\" class=\\\"logo\\\">Customer Profiling</a>\\r\\n</div>\\r\\n<mat-sidenav-container class=\\\"navContainer\\\">\\r\\n    <mat-sidenav class=\\\"sideContent\\\" *ngIf=\\\"_auth.isLoggedIn()\\\" mode=\\\"side\\\" opened>\\r\\n        <mat-nav-list>\\r\\n            <a mat-list-item routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon>dashboard</mat-icon>\\r\\n                <span>Dashboard</span>\\r\\n            </a>\\r\\n        </mat-nav-list>\\r\\n        <mat-nav-list>\\r\\n            <a mat-list-item routerLink=\\\"/projects\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon>filter_list</mat-icon>\\r\\n                <span>Projects</span>\\r\\n            </a>\\r\\n        </mat-nav-list>\\r\\n        <mat-nav-list>\\r\\n            <a mat-list-item routerLink=\\\"/datasets\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon>router</mat-icon>\\r\\n                <span>Datasets</span>\\r\\n            </a>\\r\\n        </mat-nav-list>\\r\\n        <mat-nav-list>\\r\\n            <a mat-list-item routerLink=\\\"/algorithms\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon>developer_board</mat-icon>\\r\\n                <span>Algorithms</span>\\r\\n            </a>\\r\\n        </mat-nav-list>\\r\\n        <mat-nav-list class=\\\"logout\\\">\\r\\n            <a mat-list-item (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon>exit_to_app</mat-icon>\\r\\n                <span>Logout</span>\\r\\n            </a>\\r\\n        </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content class=\\\"mainContent\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'CustomerProfiling';\r\n  private user;\r\n\r\n  constructor(private _auth: AuthService, private _router: Router) {\r\n  }\r\n  logout() {\r\n    this._auth.logout()\r\n      .subscribe(\r\n        res => {\r\n          localStorage.removeItem('username');\r\n          this._router.navigate(['/login']);\r\n        },\r\n        err => console.log(err)\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import { AnalyzeService } from './analyze/analyze.service';\r\nimport { DatasetService } from './dataset/dataset.service';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutes } from './app.routes';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// Modules\r\nimport { MaterialModule } from './shared/modules/material.module';\r\n\r\n// Services\r\nimport { ProjectsService } from './projects/projects.service';\r\nimport { AlgorithmsService } from './algorithms/algorithms.service';\r\nimport { ProjectOverviewService } from './project-overview/project.overview.service';\r\nimport { SharedService } from './shared/services/shared.service';\r\nimport { EditAlgorithmService } from './dialogs/edit-algorithm/edit-algorithm.service';\r\nimport { Dashboardervice } from './dashboard/dashboard.service';\r\n\r\n// Components\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { AddComponent } from './dialogs/addProject/add.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AuthGuard } from './shared/guards/auth.guard';\r\nimport { DeleteComponent } from './dialogs/delete/delete.component';\r\nimport { CopyComponent } from './dialogs/copyProject/copy.component';\r\nimport { DatasetComponent } from './dataset/dataset.component';\r\nimport { DataTabComponent } from './data-tab/data-tab.component';\r\nimport { DataTabService } from './data-tab/data-tab.service';\r\nimport { EditAlgorithmComponent } from './dialogs/edit-algorithm/edit-algorithm.component';\r\n\r\n// import { ProjectOverviewComponent } from './project-overview/project-overview.component';\r\nimport { ProjectOverviewComponent } from './project-overview/project-overview.component';\r\nimport { AddDatasetComponent } from './dialogs/add-dataset/add-dataset.component';\r\nimport { DatasetDetailComponent } from './dialogs/dataset-detail/dataset-detail.component';\r\nimport { DataTabViewComponent } from './dialogs/data-tab-view/data-tab-view.component';\r\nimport { AlgorithmsComponent } from './algorithms/algorithms.component';\r\nimport { AddProjectService } from './dialogs/addProject/addProject.service';\r\nimport { CopyProjectService } from './dialogs/copyProject/copyProject.service';\r\nimport { AddAlgorithmComponent } from './dialogs/add-algorithm/add-algorithm.component';\r\nimport { ViewAlgorithmComponent } from './dialogs/view-algorithm/view-algorithm.component';\r\nimport { OneProjectComponent } from './one-project/one-project.component';\r\nimport { AnalyzeComponent } from './analyze/analyze.component';\r\nimport { AddValueComponent } from './dialogs/add-value/add-value.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProjectsComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    AddComponent,\r\n    DeleteComponent,\r\n    CopyComponent,\r\n    DatasetComponent,\r\n    DataTabComponent,\r\n    ProjectOverviewComponent,\r\n    AddDatasetComponent,\r\n    DatasetDetailComponent,\r\n    DataTabViewComponent,\r\n    AlgorithmsComponent,\r\n    AddAlgorithmComponent,\r\n    ViewAlgorithmComponent,\r\n    OneProjectComponent,\r\n    AnalyzeComponent,\r\n    AddValueComponent,\r\n    EditAlgorithmComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutes,\r\n    BrowserAnimationsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    ProjectsService,\r\n    DataTabService,\r\n    AlgorithmsService,\r\n    AddProjectService,\r\n    CopyProjectService,\r\n    ProjectOverviewService,\r\n    AnalyzeService,\r\n    SharedService,\r\n    EditAlgorithmService,\r\n    Dashboardervice\r\n  ],\r\n  entryComponents: [\r\n    AddComponent,\r\n    DeleteComponent,\r\n    CopyComponent,\r\n    AddDatasetComponent,\r\n    DatasetDetailComponent,\r\n    DataTabViewComponent,\r\n    CopyComponent,\r\n    AddAlgorithmComponent,\r\n    ViewAlgorithmComponent,\r\n    AddValueComponent,\r\n    EditAlgorithmComponent\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","import { OneProjectComponent } from './one-project/one-project.component';\r\nimport { DatasetComponent } from './dataset/dataset.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './shared/guards/auth.guard';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { DataTabComponent } from './data-tab/data-tab.component';\r\nimport { ProjectOverviewComponent } from './project-overview/project-overview.component';\r\nimport { AlgorithmsComponent } from './algorithms/algorithms.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    canActivate: [AuthGuard],\r\n    pathMatch: 'full'\r\n  },\r\n  { path: 'projects', component: ProjectsComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'datasets', component: DatasetComponent, canActivate: [AuthGuard] },\r\n  { path: 'one-project', component: OneProjectComponent },\r\n  // { path: 'data-tab', component: DataTabComponent, canActivate: [AuthGuard] },\r\n  { path: 'algorithms', component: AlgorithmsComponent, canActivate: [AuthGuard] },\r\n  { path: '**', component: LoginComponent }\r\n];\r\n\r\nexport const AppRoutes: any = RouterModule.forRoot(routes, { useHash: true });\r\n","module.exports = \"<h1>Dashboard</h1>\\r\\n<div class=\\\"dashboardPanel\\\">\\r\\n  <div class=\\\"flex-grid\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-title>Projects Overview</mat-title>\\r\\n        </mat-card-header>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-card-content *ngIf=\\\"projectsArr\\\">\\r\\n          <mat-nav-list *ngFor=\\\"let project of projectsArr; let i = index\\\">\\r\\n            <mat-list-item (click)=\\\"projectClick()\\\" (dblclick)=\\\"projectDblclick(project.id)\\\">\\r\\n              <div class=\\\"flex space-between list-wrapper\\\">\\r\\n                <span> {{project.projectName}}</span>\\r\\n                <mat-chip-list>\\r\\n                  <mat-chip [ngStyle]=\\\"{'backgroundColor':getColor(project.status)}\\\" selected>{{project.status}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n          </mat-nav-list>\\r\\n        </mat-card-content> -->\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-title>Datasets Overview</mat-title>\\r\\n        </mat-card-header>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-card-content>\\r\\n          <mat-nav-list *ngFor=\\\"let datasets of dataset; let i = index\\\">\\r\\n            <mat-list-item (click)=\\\"datasetClick()\\\" (dblclick)=\\\"datasetDblclick(datasets.id)\\\">{{datasets.name}}</mat-list-item>\\r\\n          </mat-nav-list>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-title>Analytical Tools Overview</mat-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <mat-nav-list *ngFor=\\\"let algorithms of algorithm; let i = index\\\">\\r\\n            <mat-list-item (click)=\\\"algorithmClick()\\\" (dblclick)=\\\"algorithmDblclick(algorithms.id)\\\">{{algorithms.algorithmName}}</mat-list-item>\\r\\n          </mat-nav-list>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div class=\\\"flex-grid\\\"> -->\\r\\n  <!-- <div class=\\\"col\\\">\\r\\n            <mat-card class=\\\"dashboard-card\\\">\\r\\n                <mat-title>System Monitor Overview</mat-title>\\r\\n            </mat-card>\\r\\n        </div> -->\\r\\n  <!-- </div> -->\\r\\n  <div class=\\\"flex-grid\\\">\\r\\n    <div class=\\\"colFullHeight\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-title>Panel Detail</mat-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <div>\\r\\n            <ng-template #projects>\\r\\n              <span class=\\\"projects\\\">\\r\\n                <h4 class=\\\"subtitle\\\">Project details for project ID: </h4>\\r\\n                projects\\r\\n                <p></p>\\r\\n              </span>\\r\\n            </ng-template>\\r\\n            <!-- <ng-template #datasets>\\r\\n                <span class=\\\"datasets\\\">\\r\\n                  datasets\\r\\n                </span> -->\\r\\n              <!-- </ng-template> -->\\r\\n          </div>\\r\\n          <ng-content></ng-content>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n.dashboardPanel {\\n  width: 96%;\\n  margin-left: 2%;\\n  display: flex;\\n  flex-direction: row; }\\n\\nh1 {\\n  margin-left: 2%;\\n  color: #757575; }\\n\\n.flex-grid {\\n  width: 95%;\\n  flex-direction: column;\\n  justify-content: space-between; }\\n\\n.col {\\n  border-width: 1px;\\n  border-style: groove;\\n  border-color: #E1F5FE;\\n  margin: 0 0 5px 0; }\\n\\n.colFullHeight {\\n  width: 100%;\\n  height: 800px;\\n  border-width: 1px;\\n  border-style: groove;\\n  border-color: #E1F5FE;\\n  margin-left: 2%; }\\n\\nmat-card {\\n  padding: 0 !important;\\n  box-shadow: none !important; }\\n\\nmat-card-header {\\n  background: #311B92 !important;\\n  color: white !important;\\n  padding: 20px; }\\n\\nmat-card-content {\\n  padding: 5px 25px;\\n  max-height: 200px;\\n  overflow-y: scroll; }\\n\\n.list-wrapper {\\n  width: 100%;\\n  align-items: center; }\\n\\n@media (max-width: 400px) {\\n  .flex-grid {\\n    display: block; }\\n  .col {\\n    margin-top: 1%;\\n    width: 100%; } }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Dashboardervice } from './dashboard.service';\r\nimport { SharedService } from '../shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  data: any;\r\n  dataset: any;\r\n  algorithm: any;\r\n  selected: any;\r\n  projectsArr: Array<Object>;\r\n\r\n  constructor(\r\n    public dashboardService: Dashboardervice,\r\n    private _router: Router,\r\n    public sharedService: SharedService\r\n  ) { }\r\n  // get All projects - first tab\r\n  getAllProjects() {\r\n    this.dashboardService.getProjects()\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.projectsArr = res['data'];\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      );\r\n  }\r\n  // colors for status - projects\r\n  getColor(status) {\r\n    switch (status) {\r\n      case 'Not trained':\r\n        return '$primary';\r\n      case 'Trained':\r\n        return '$accent';\r\n      case 'Learning':\r\n        return '$warn';\r\n    }\r\n  }\r\n  // get All Datasets - second tab\r\n  getAllDatasets() {\r\n    this.dashboardService.getDatasets().subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.dataset = res['data'];\r\n        console.log(this.dataset);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  // get All Algorithms - third tab\r\n  getAllAlgorithms() {\r\n    this.dashboardService.getAlgorithms().subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.algorithm = res['data'];\r\n        console.log(this.algorithm);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  // project details click and dbl click function\r\n  projectClick() {\r\n    console.log('klik');\r\n    // this.sharedService.setProjectId(id);\r\n  }\r\n  projectDblclick(id) {\r\n    console.log('dblklik');\r\n    // this.sharedService.setProjectId(id);\r\n    // this._router.navigate(['/one-project']);\r\n    // this.dashboardService.getProjectsDetails(id).subscribe(\r\n    //   res => {\r\n    //     console.log(res);\r\n    //     // this._router.navigate(['/one-project']);\r\n    //   },\r\n    //   err => {\r\n    //     console.log(err);\r\n    //   }\r\n    // );\r\n  }\r\n  // dataset details click and dbl click\r\n  datasetClick() {\r\n    console.log('click');\r\n  }\r\n  datasetDblclick(id) {\r\n    console.log('dblklik');\r\n    this.dashboardService.getDatasetDetails(id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.data = res['data'];\r\n        console.log(this.data);\r\n        // this._router.navigate(['/one-project']);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  // algorithm details click and dbl click\r\n  algorithmClick() {\r\n    console.log('click');\r\n  }\r\n  algorithmDblclick(id) {\r\n    console.log('dblklik');\r\n    this.dashboardService.getAlgorithmDetails(id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        // this._router.navigate(['/one-project']);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.getAllProjects();\r\n    this.getAllDatasets();\r\n    this.getAllAlgorithms();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from '../../../node_modules/rxjs/operators';\r\n\r\n@Injectable()\r\nexport class Dashboardervice {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  baseUrl = '/CustomerProfiling/rest/';\r\n\r\n  getProjects() {\r\n    return this._http.get(this.baseUrl + 'projects').pipe(map(res => res));\r\n  }\r\n\r\n  getDatasets() {\r\n    return this._http.get(this.baseUrl + 'dataset');\r\n  }\r\n\r\n  getAlgorithms() {\r\n    return this._http.get(this.baseUrl + 'algorithms');\r\n  }\r\n\r\n  getProjectsDetails(id) {\r\n    return this._http.get(this.baseUrl + 'projects/' + id);\r\n}\r\ngetDatasetDetails(id) {\r\n  return this._http.get(this.baseUrl + 'dataset/' + id);\r\n}\r\n\r\ngetAlgorithmDetails(id) {\r\n  return this._http.get(this.baseUrl + 'algorithms/' + id);\r\n}\r\n  // getDataTypes() {\r\n  //     return this._http.get(this.baseUrl + 'dataTypes');\r\n  // }\r\n\r\n  // getVariableTypes() {\r\n  //     return this._http.get(this.baseUrl + 'columnTypes');\r\n  // }\r\n\r\n  // getOperationTypes(type) {\r\n  //     return this._http.get(this.baseUrl + 'operationTypes?dataType=' + type);\r\n  // }\r\n}\r\n","module.exports = \"<div id=\\\"data-tab\\\">\\r\\n  <!-- Basic info -->\\r\\n  <h2 class=\\\"subtitle\\\">DATASET - Info & Stats</h2>\\r\\n  <div class=\\\"flex space-around border\\\">\\r\\n    <!-- DATASET DETAILS -->\\r\\n    <mat-card class=\\\"info-box justify\\\">\\r\\n      <div *ngIf=\\\"details\\\">\\r\\n        <div class=\\\"details-item\\\">\\r\\n          <strong>Dataset: </strong>\\r\\n          {{details.datasetName}}\\r\\n        </div>\\r\\n        <div class=\\\"details-item\\\">\\r\\n          <strong>Description: </strong>\\r\\n          {{details.datasetDesc}}\\r\\n        </div>\\r\\n        <div class=\\\"details-item\\\">\\r\\n          <strong>Dataset size: </strong>\\r\\n          {{details.datasetSize}} KB\\r\\n        </div>\\r\\n        <div class=\\\"details-item\\\">\\r\\n          <strong>Number of rows: </strong>\\r\\n          {{details.numberOfRows}}\\r\\n        </div>\\r\\n        <div class=\\\"details-item\\\">\\r\\n          <strong>Number of variables: </strong>\\r\\n          {{details.numberOfVariables}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n    <!-- LIST OF VARIABLES -->\\r\\n    <mat-card class=\\\"info-box justify\\\">\\r\\n      <div *ngIf=\\\"details && details.variableDetails.length > 0\\\">\\r\\n        <div>\\r\\n          <strong>Variable details: </strong>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let item of  details.variableDetails; let i = index\\\">\\r\\n          <span>{{i+1}}. </span>\\r\\n          <span>\\r\\n            <strong>Name:</strong> {{item.variableName}} </span>\\r\\n          <span>\\r\\n            <br>\\r\\n            <strong>Variance:</strong> {{item.variance}} </span>\\r\\n          <span>\\r\\n            <br>\\r\\n            <strong>Min:</strong> {{item.min}} </span>\\r\\n          <span>\\r\\n            <strong>Max:</strong> {{item.max}} </span>\\r\\n          <span>\\r\\n            <br>\\r\\n            <strong>Distinct Count:</strong> {{item.distinctCount}} </span>\\r\\n          <br>\\r\\n          <span>\\r\\n            <strong>Average:</strong> {{item.average}} </span>\\r\\n          <br>\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <!-- Pre Processing -->\\r\\n  <h2 *ngIf=\\\"!isDatasetLinked\\\" class=\\\"subtitle\\\">DATASET - Pre Processing</h2>\\r\\n  <div *ngIf=\\\"!isDatasetLinked\\\" class=\\\"border\\\">\\r\\n    <!-- Titles -->\\r\\n    <div class=\\\"flex space-around title-bar\\\" *ngIf=\\\"variables\\\">\\r\\n      <span class=\\\"processing-title\\\">\\r\\n        Variable Name\\r\\n      </span>\\r\\n      <span class=\\\"processing-title\\\">\\r\\n        Type of Variable\\r\\n      </span>\\r\\n      <span class=\\\"processing-title\\\">\\r\\n        Type of Data\\r\\n      </span>\\r\\n      <span class=\\\"processing-title\\\">\\r\\n        Type of Operation\\r\\n      </span>\\r\\n      <span class=\\\"processing-title\\\">\\r\\n        Parameters\\r\\n      </span>\\r\\n    </div>\\r\\n    <!-- Data -->\\r\\n    <div class=\\\"flex column\\\">\\r\\n      <div *ngFor=\\\"let variable of variables; let i = index\\\" class=\\\"flex space-around variable-items\\\">\\r\\n        <!-- Variable Name -->\\r\\n        <span>{{variable.variableName}}</span>\\r\\n\\r\\n        <!-- Variable Type -->\\r\\n        <mat-form-field>\\r\\n          <mat-select (selectionChange)=\\\"selectionChanged($event, i, 'typeOfVariable')\\\" placeholder=\\\"Variable Type\\\">\\r\\n            <mat-option *ngFor=\\\"let type of variableTypes\\\" [value]=\\\"type\\\">\\r\\n              {{type}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Data Type -->\\r\\n        <mat-form-field>\\r\\n          <mat-select [disabled]=\\\"variables[i].typeOfData =='TEXT'\\\" [(ngModel)]=\\\"variables[i].typeOfData\\\" (selectionChange)=\\\"selectionChanged($event, i, 'typeOfData')\\\"\\r\\n            placeholder=\\\"Data Type\\\">\\r\\n            <mat-option *ngFor=\\\"let type of dataTypes\\\" [value]=\\\"type\\\">\\r\\n              {{type}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Operation Type -->\\r\\n        <div>\\r\\n          <!-- Numeric -->\\r\\n          <mat-form-field *ngIf=\\\"variables[i].typeOfData == 'NUMERIC'\\\">\\r\\n            <mat-select (selectionChange)=\\\"setParams($event, i)\\\" placeholder=\\\"Operation Type\\\">\\r\\n              <mat-option *ngFor=\\\"let type of numericOperationTypes\\\" [value]=\\\"type\\\">\\r\\n                {{type}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <!-- Text -->\\r\\n          <mat-form-field *ngIf=\\\"variables[i].typeOfData == 'TEXT'\\\">\\r\\n            <mat-select (selectionChange)=\\\"setParams($event, i)\\\" placeholder=\\\"Operation Type\\\">\\r\\n              <mat-option *ngFor=\\\"let type of textOperationTypes\\\" [value]=\\\"type\\\">\\r\\n                {{type}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!--  P A R A M S -->\\r\\n        <span class=\\\"params\\\">\\r\\n          <!-- Min & Max -->\\r\\n          <div *ngIf=\\\"variables[i]['params']; else noData\\\">\\r\\n            <span *ngIf=\\\"variables[i]['params']['minmax'] == true\\\">\\r\\n              <mat-form-field class=\\\"small-input\\\">\\r\\n                <input type=\\\"number\\\" (change)=\\\"paramsChanged($event, i, 'scaleMin')\\\" matInput placeholder=\\\"Min\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"small-input\\\">\\r\\n                <input type=\\\"number\\\" (change)=\\\"paramsChanged($event, i, 'scaleMax')\\\" matInput placeholder=\\\"Max\\\">\\r\\n              </mat-form-field>\\r\\n            </span>\\r\\n            <!-- Bins -->\\r\\n            <span *ngIf=\\\"variables[i]['params']['bins'] == true\\\">\\r\\n              <mat-form-field class=\\\"small-input\\\">\\r\\n                <input type=\\\"number\\\" (change)=\\\"paramsChanged($event, i, 'bins')\\\" matInput placeholder=\\\"Bins\\\">\\r\\n              </mat-form-field>\\r\\n            </span>\\r\\n          </div>\\r\\n          <ng-template #noData>\\r\\n            No parameters.\\r\\n          </ng-template>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"warn-message\\\"> {{message}}</div>\\r\\n      <!-- Buttons -->\\r\\n      <span class=\\\"buttons\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=submit()>Save</button>\\r\\n        <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"viewObject()\\\">View</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#data-tab {\\n  margin: 5% 10%; }\\n\\n#data-tab .border {\\n    border: 1px solid #E0E0E0;\\n    padding: 50px; }\\n\\n#data-tab .info-box {\\n    padding: 50px;\\n    width: 400px;\\n    margin: 0 20px; }\\n\\n#data-tab .title-bar {\\n    margin-bottom: 20px; }\\n\\n#data-tab .processing-title {\\n    color: #311B92;\\n    margin-top: 20px;\\n    font-size: 18px;\\n    width: 158px;\\n    font-weight: bold; }\\n\\n#data-tab .variable-items > span {\\n    width: 150px;\\n    padding: 20px 0;\\n    font-size: 16px; }\\n\\n#data-tab .params {\\n    padding: 0 !important;\\n    font-size: 16px !important;\\n    display: flex;\\n    align-items: center; }\\n\\n#data-tab .mat-form-field-infix {\\n    width: 150px !important; }\\n\\n#data-tab .small-input {\\n    width: 45px !important;\\n    margin-right: 10px; }\\n\\n#data-tab .buttons {\\n    margin-top: 40px; }\\n\\n#data-tab button {\\n    float: right;\\n    margin-left: 10px; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialog } from '../../../node_modules/@angular/material';\r\nimport { DataTabService } from './data-tab.service';\r\n// Dialog Components\r\nimport { DataTabViewComponent } from '../dialogs/data-tab-view/data-tab-view.component';\r\nimport { SharedService } from '../shared/services/shared.service';\r\nimport { ProjectOverviewService } from '../project-overview/project.overview.service';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-data-tab',\r\n  templateUrl: './data-tab.component.html',\r\n  styleUrls: ['./data-tab.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DataTabComponent implements OnInit {\r\n\r\n  constructor(public dataTabService: DataTabService, public dialog: MatDialog, public sharedService: SharedService, public projectOverviewService: ProjectOverviewService, public snackbar: SnackBarService) { }\r\n\r\n  variables: any;\r\n  variableTypes: any;\r\n  dataTypes: any;\r\n  operationTypes: any;\r\n  message: string;\r\n  numericOperationTypes: any = [];\r\n  textOperationTypes: any = [];\r\n  datasetId: number;\r\n  projectId: number;\r\n  details: any; //Dataset details\r\n  csvArray: any;\r\n  isDatasetLinked: boolean;\r\n\r\n  getVariables() {\r\n    this.dataTabService.getVariables(this.datasetId)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.variables = res['data'];\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  getVariableTypes() {\r\n    this.dataTabService.getVariableTypes()\r\n      .subscribe(\r\n        res => {\r\n          // console.log(res);\r\n          this.variableTypes = res['data'];\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  getDataTypes() {\r\n    this.dataTabService.getDataTypes()\r\n      .subscribe(\r\n        res => {\r\n          // console.log(res);\r\n          this.dataTypes = res['data'];\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  getDatasetDetails() {\r\n    this.projectOverviewService.getDatasetDetails(this.datasetId).subscribe(\r\n      res => {\r\n        this.details = res.data;\r\n        console.log(this.details);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n      }\r\n    );\r\n  }\r\n\r\n  getIsDatasetLinked() {\r\n    this.isDatasetLinked = this.sharedService.getIsDatasetLinked();\r\n  }\r\n\r\n  setOperationTypes() {\r\n    this.dataTabService.getOperationTypes('NUMERIC')\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.numericOperationTypes = res['data'];\r\n          // this.variables[index]['operationTypes'] = res['data'];\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    this.dataTabService.getOperationTypes('TEXT')\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.textOperationTypes = res['data'];\r\n          // this.variables[index]['operationTypes'] = res['data'];\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  selectionChanged(ev, index, type) {\r\n    this.variables[index][type] = ev.value;\r\n\r\n    if (type == 'typeOfData' && ev.value == 'TEXT') {\r\n      if (this.variables[index]['scaleMin']) this.variables[index]['scaleMin'] = null;\r\n      if (this.variables[index]['scaleMax']) this.variables[index]['scaleMax'] = null;\r\n      if (this.variables[index]['bins']) this.variables[index]['bins'] = null;\r\n    }\r\n\r\n    if (type == 'typeOfData' && this.variables[index]['params']) {\r\n      delete this.variables[index]['params'];\r\n    }\r\n    console.log(this.variables);\r\n  }\r\n\r\n  paramsChanged(ev, index, type) {\r\n    this.variables[index][type] = ev.target.value;\r\n\r\n    // console.log(this.variables);\r\n  }\r\n\r\n  setParams(ev, index) {\r\n    switch (ev.value) {\r\n      case 'Scaling operation':\r\n        this.variables[index]['params'] = { 'minmax': true, 'bins': false };\r\n        if (this.variables[index]['bins']) this.variables[index]['bins'] = null;\r\n        this.variables[index]['distinct'] = false;\r\n        this.variables[index]['leaveAsItIs'] = false;\r\n        break;\r\n      case 'Binning operation':\r\n        this.variables[index]['params'] = { 'minmax': false, 'bins': true };\r\n        if (this.variables[index]['scaleMin']) this.variables[index]['scaleMin'] = null;\r\n        if (this.variables[index]['scaleMax']) this.variables[index]['scaleMax'] = null;\r\n        this.variables[index]['distinct'] = false;\r\n        this.variables[index]['leaveAsItIs'] = false;\r\n        break;\r\n      case 'Unfolding with distinct categories':\r\n        this.variables[index]['distinct'] = true;\r\n        this.variables[index]['leaveAsItIs'] = false;\r\n\r\n        if (this.variables[index]['bins']) this.variables[index]['bins'] = null;\r\n        if (this.variables[index]['scaleMin']) this.variables[index]['scaleMin'] = null;\r\n        if (this.variables[index]['scaleMax']) this.variables[index]['scaleMax'] = null;\r\n        break;\r\n      case 'Live as it is':\r\n        this.variables[index]['leaveAsItIs'] = true;\r\n        this.variables[index]['distinct'] = false;\r\n        if (this.variables[index]['bins']) this.variables[index]['bins'] = null;\r\n        if (this.variables[index]['scaleMin']) this.variables[index]['scaleMin'] = null;\r\n        if (this.variables[index]['scaleMax']) this.variables[index]['scaleMax'] = null;\r\n        break;\r\n    }\r\n    console.log(this.variables);\r\n  }\r\n\r\n  viewObject() {\r\n    let checkArray = [];\r\n\r\n    // Check for empty fields\r\n    for (let i = 0; i < this.variables.length; i++) {\r\n      if (!this.variables[i]['typeOfVariable']) {\r\n        this.message = 'Select variable type.';\r\n        break;\r\n      }\r\n      else if (!this.variables[i]['typeOfData']) {\r\n        this.message = 'Select data type.';\r\n        break;\r\n      }\r\n      else if (!this.variables[i]['bins'] && !this.variables[i]['scaleMin'] && !this.variables[i]['scaleMax'] && !this.variables[i]['distinct'] && !this.variables[i]['leaveAsItIs']) {\r\n        this.message = 'Select parameters.';\r\n        break;\r\n      }\r\n      else if (!this.variables[i]['bins'] && !this.variables[i]['scaleMin'] && !this.variables[i]['scaleMax'] && !this.variables[i]['distinct'] && !this.variables[i]['leaveAsItIs']) {\r\n        this.message = 'Select parameters.';\r\n        break;\r\n      }\r\n      else {\r\n        checkArray.push(true);\r\n      }\r\n    }\r\n    // Send request after check\r\n    if (checkArray.length == this.variables.length) {\r\n\r\n      this.dataTabService.getProcessingView(this.datasetId, this.variables)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res['data']);\r\n            this.csvArray = res['data'];\r\n            this.dialog.open(DataTabViewComponent, {\r\n              width: '800px',\r\n              data: this.csvArray\r\n            })\r\n          },\r\n          err => {\r\n            console.log(err);\r\n          }\r\n        );\r\n      // console.log(this.variables);\r\n      // this.message = '';\r\n      // const dialogRef = this.dialog.open(DataTabViewComponent, {\r\n      //   width: '800px',\r\n      //   data: this.variables\r\n      // });\r\n    }\r\n\r\n  }\r\n\r\n  submit() {\r\n    let checkArray = [];\r\n    console.log(this.variables);\r\n\r\n    // Check for empty fields\r\n    for (let i = 0; i < this.variables.length; i++) {\r\n      if (!this.variables[i]['typeOfVariable']) {\r\n        this.message = 'Select variable type.';\r\n        break;\r\n      }\r\n      else if (!this.variables[i]['typeOfData']) {\r\n        this.message = 'Select data type.';\r\n        break;\r\n      }\r\n      else if (!this.variables[i]['bins'] && !this.variables[i]['scaleMin'] && !this.variables[i]['scaleMax'] && !this.variables[i]['distinct'] && !this.variables[i]['leaveAsItIs']) {\r\n        this.message = 'Select parameters.';\r\n        break;\r\n      }\r\n      else if (!this.variables[i]['bins'] && !this.variables[i]['scaleMin'] && !this.variables[i]['scaleMax'] && !this.variables[i]['distinct'] && !this.variables[i]['leaveAsItIs']) {\r\n        this.message = 'Select parameters.';\r\n        break;\r\n      }\r\n      else {\r\n        checkArray.push(true);\r\n      }\r\n    }\r\n    // Send request after check\r\n    if (checkArray.length == this.variables.length) {\r\n      this.message = '';\r\n\r\n      let data = this.variables;\r\n      // \r\n      // Variables has params property\r\n      // \r\n      for (let i = 0; i < data.length; i++) {\r\n        delete data[i]['params'];\r\n        delete data[i]['operationTypes'];\r\n      }\r\n      this, this.dataTabService.save(this.datasetId, this.projectId, data)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res);\r\n          },\r\n          err => {\r\n            console.log(err);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.datasetId = this.sharedService.getDatasetId();\r\n    this.projectId = this.sharedService.getProjectId();\r\n\r\n    this.getVariables();\r\n    this.getDataTypes();\r\n    this.getVariableTypes();\r\n    this.setOperationTypes();\r\n    this.getDatasetDetails();\r\n    this.getIsDatasetLinked();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from '../../../node_modules/rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DataTabService {\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    baseUrl = '/CustomerProfiling/rest/dataset/';\r\n\r\n    getVariables(id) {\r\n        return this._http.get(this.baseUrl + 'preprocessing?datasetId=' + id);\r\n    }\r\n\r\n    getDataTypes() {\r\n        return this._http.get(this.baseUrl + 'dataTypes');\r\n    }\r\n\r\n    getVariableTypes() {\r\n        return this._http.get(this.baseUrl + 'columnTypes');\r\n    }\r\n\r\n    getOperationTypes(type) {\r\n        return this._http.get(this.baseUrl + 'operationTypes?dataType=' + type);\r\n    }\r\n\r\n    getProcessingView(datasetId, list): Observable<any> {\r\n        for (let i = 0; i < list.length; i++) {\r\n            delete list[i]['params'];\r\n            delete list[i]['operationTypes'];\r\n        }\r\n\r\n        return this._http.post(this.baseUrl + 'preprocessing/view?datasetId=' + datasetId, list);\r\n    }\r\n    save(datasetId, projectId, list) {\r\n        return this._http.post(this.baseUrl + 'preprocessing/save?datasetId=' + datasetId + '&projectId=' + projectId, list);\r\n    }\r\n}","module.exports = \"<div id=\\\"datasets\\\" class=\\\"flex column center\\\">\\r\\n\\r\\n    <div class=\\\"button-wrapper flex space-between\\\">\\r\\n        <!-- Search Input -->\\r\\n        <mat-form-field class=\\\"filterInput\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search table\\\">\\r\\n        </mat-form-field>\\r\\n        <!-- Add Button -->\\r\\n        <button (click)=\\\"addDataset()\\\" matTooltip=\\\"Add Dataset\\\" matTooltipPosition=\\\"above\\\" mat-mini-fab>\\r\\n            <i class=\\\"material-icons plus\\\">add</i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <table *ngIf=\\\"dataSource\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"datasetName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Dataset Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dataset\\\"> {{dataset.name}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions</th>\\r\\n            <td mat-cell *matCellDef=\\\"let dataset\\\">\\r\\n                <div class=\\\"flex icons-wrapper\\\">\\r\\n                    <i matTooltip=\\\"Show dateset\\\" (click)=\\\"showDatasetDetail(dataset.id)\\\" matTooltipPosition=\\\"above\\\" class=\\\"material-icons table-icons\\\">\\r\\n                        visibility </i>\\r\\n                    <i matTooltip=\\\"Delete dateset\\\" (click)=\\\"deleteDataset(dataset)\\\" matTooltipPosition=\\\"above\\\" class=\\\"material-icons table-icons\\\">\\r\\n                        delete </i>\\r\\n                </div>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator class=\\\"mat-elevation-z8\\\" [length]=\\\"dataSource.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[1,5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#datasets table.mat-table {\\n  margin-top: 20px;\\n  width: 80%; }\\n\\n#datasets tr.mat-header-row {\\n  background: linear-gradient(to right, #311B92, #7C4DFF); }\\n\\n#datasets th.mat-header-cell {\\n  width: 250px;\\n  color: #fff; }\\n\\n#datasets td.mat-cell {\\n  padding: 10px 10px 10px 0 !important; }\\n\\n#datasets td.mat-cell:first-child, #datasets td.mat-footer-cell:first-child, #datasets th.mat-header-cell:first-child {\\n  padding-left: 24px !important; }\\n\\n#datasets .button-wrapper {\\n  width: 80%;\\n  margin-top: 100px; }\\n\\n#datasets .button-wrapper > button {\\n  float: right;\\n  margin-top: 15px; }\\n\\n#datasets .icons-wrapper {\\n  align-items: flex-start;\\n  justify-content: flex-start; }\\n\\n#datasets .table-icons {\\n  color: #311B92;\\n  font-size: 22px;\\n  margin-right: 15px; }\\n\\n#datasets .table-icons:hover {\\n  color: #FF3D00;\\n  cursor: pointer; }\\n\\n#datasets .mat-paginator,\\n#datasets .mat-paginator-page-size .mat-select-trigger {\\n  width: 80%; }\\n\\n#datasets .filterInput {\\n  width: 50%; }\\n\"","import { DeleteComponent } from './../dialogs/delete/delete.component';\r\nimport { DatasetService } from './dataset.service';\r\nimport { DatasetDetailComponent } from './../dialogs/dataset-detail/dataset-detail.component';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatPaginator, PageEvent, MatTableDataSource } from '@angular/material';\r\nimport { AddDatasetComponent } from '../dialogs/add-dataset/add-dataset.component';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dataset',\r\n  templateUrl: './dataset.component.html',\r\n  styleUrls: ['./dataset.component.scss']\r\n})\r\nexport class DatasetComponent implements OnInit {\r\n\r\n  constructor(private _dialog: MatDialog, private _datasetService: DatasetService, private _snackBarService: SnackBarService) { }\r\n\r\n  private displayedColumns: string[] = ['datasetName', 'actions'];\r\n  private dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\r\n  paginator: MatPaginator;\r\n  @ViewChild(MatPaginator)\r\n  set datasourcePaginator(paginator: MatPaginator) {\r\n    this.paginator = paginator;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._datasetService.getDatasets().subscribe(res => {\r\n      this.dataSource = new MatTableDataSource(JSON.parse(res.text()).data);\r\n    }, err => { }, () => {\r\n      this.dataSource.filterPredicate = function (data, filter: string): boolean {\r\n        return data.name.toLowerCase().includes(filter);\r\n      };\r\n    });\r\n  }\r\n\r\n  addDataset() {\r\n    const dialogRef = this._dialog.open(AddDatasetComponent, {\r\n      width: '850px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(results => {\r\n      this._datasetService.getDatasets().subscribe(res => {\r\n        this.dataSource = new MatTableDataSource(JSON.parse(res.text()).data);\r\n      });\r\n    });\r\n  }\r\n  showDatasetDetail(id) {\r\n    let objToShow;\r\n    this._datasetService.getDataset(id).subscribe(res => {\r\n      objToShow = JSON.parse(res.text()).data;\r\n    }, err => { }, () => {\r\n      const dialogRef = this._dialog.open(DatasetDetailComponent, {\r\n        width: '1000px',\r\n        data: objToShow\r\n      });\r\n      dialogRef.afterClosed().subscribe(results => {\r\n      });\r\n    });\r\n  }\r\n  deleteDataset(dataset) {\r\n    const dialogRef = this._dialog.open(DeleteComponent, {\r\n      width: '500px',\r\n      data: { type: \"dataset\", value: dataset.name }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res == true) {\r\n        this._datasetService.deleteDataset(dataset.id).subscribe(res => {\r\n        }, err => {\r\n          this._snackBarService.openSnackBar('Error', 'Something went wrong!');\r\n        }, () => {\r\n          this._snackBarService.openSnackBar('Success', 'You have successfuly deleted dataset!');\r\n          this._datasetService.getDatasets().subscribe(res => {\r\n            this.dataSource = new MatTableDataSource(JSON.parse(res.text()).data);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Http} from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatasetService {\r\n\r\n  constructor(private _http: Http) { }\r\n\r\n  baseUrl = 'rest/dataset/';\r\n\r\n  getDatasets() {\r\n    return this._http.get(this.baseUrl);\r\n  }\r\n\r\n  addDataset(formData: FormData) {\r\n    return this._http.post(this.baseUrl + 'addNewDataset', formData);\r\n  }\r\n\r\n  getDataset(id){\r\n    return this._http.get(this.baseUrl + id);\r\n  }\r\n\r\n  deleteDataset(id){\r\n    return this._http.delete(this.baseUrl + id);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div id=\\\"add-algorithm\\\">\\r\\n  <h1 class=\\\"subtitle\\\" mat-dialog-title>Add Algorithm</h1>\\r\\n  <mat-divider></mat-divider>\\r\\n  <mat-dialog-content>\\r\\n    <!-- Form  -->\\r\\n    <form [formGroup]=\\\"addAlgorithmForm\\\" class=\\\"flex space-between\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"flex column\\\">\\r\\n        <h3 class=\\\"subtitle\\\">Basic Information</h3>\\r\\n        <!-- Name -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"algorithmName\\\" matInput placeholder=\\\"Algorithm Name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"algorithmName.touched && algorithmName.errors\\\">\\r\\n          <strong> You have to enter algorithm name.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Library -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"library\\\" matInput placeholder=\\\"Library\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"library.touched && library.errors\\\">\\r\\n          <strong> You have to enter library title.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Description -->\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <textarea formControlName=\\\"description\\\" matInput placeholder=\\\"Description\\\"></textarea>\\r\\n          <mat-hint>Enter algorithm description.</mat-hint>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n    <!-- P A R A M S -->\\r\\n    <div class=\\\"flex \\\">\\r\\n      <form [formGroup]=\\\"addParametersForm\\\" (ngSubmit)=\\\"addParameter()\\\" class=\\\"flex column\\\">\\r\\n        <h3 class=\\\"subtitle\\\">Add Algorithm Parameters</h3>\\r\\n        <!-- Param Name -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"parameterName\\\" matInput placeholder=\\\"Parameter Name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"parameterName.touched && parameterName.errors\\\">\\r\\n          <strong> You have to enter parameter name.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Param Type -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"parameterValueType\\\" matInput placeholder=\\\"Parameter Type\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"parameterValueType.touched && parameterValueType.errors\\\">\\r\\n          <strong> You have to enter parameter type.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Param Value -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"defaultValue\\\" matInput placeholder=\\\"Default Value\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"defaultValue.touched && defaultValue.errors\\\">\\r\\n          <strong> You have to enter default value.</strong>\\r\\n        </mat-error>\\r\\n        <button type=\\\"submit\\\" mat-stroked-button color=\\\"warn\\\" [disabled]=\\\"addParametersForm.invalid\\\">Add Parameter</button>\\r\\n        <mat-error class=\\\"message\\\">\\r\\n          <strong *ngIf=\\\"message\\\"> You cannot enter paramaters with same name.</strong>\\r\\n        </mat-error>\\r\\n      </form>\\r\\n      <div class=\\\"flex column added-params\\\">\\r\\n        <h3 class=\\\"subtitle\\\"> Added Parameters</h3>\\r\\n        <div *ngFor=\\\"let param of parameters; let i = index\\\">\\r\\n          <span class=\\\"params-show\\\">\\r\\n            <mat-icon class=\\\"unselect-icon\\\" (click)=\\\"removeJobParam(param, i)\\\">close</mat-icon>\\r\\n            {{i+1}}. {{param.parameterName}}\\r\\n            <i *ngIf=\\\"selectedParam != i\\\" class=\\\"material-icons params-expand-icon\\\" (click)=\\\"expandParamsInfo(i)\\\">\\r\\n              expand_more\\r\\n            </i>\\r\\n            <i *ngIf=\\\"expand == true && selectedParam == i\\\" class=\\\"material-icons params-expand-icon\\\" (click)=\\\"expandParamsInfo(i)\\\">\\r\\n              expand_less\\r\\n            </i>\\r\\n          </span>\\r\\n          <div *ngIf=\\\"expand == true && selectedParam == i\\\">\\r\\n            <div class=\\\"params-expanded\\\">\\r\\n              <span class=\\\"param-value\\\">\\r\\n                <strong>Type: </strong>\\r\\n                <br> {{param.parameterValueType}}\\r\\n              </span>\\r\\n              <span class=\\\"param-description\\\">\\r\\n                <strong>Default Value: </strong>\\r\\n                <br> {{param.defaultValue}}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-dialog-content>\\r\\n  <mat-dialog-actions class=\\\"buttons\\\">\\r\\n    <button mat-stroked-button mat-dialog-close color=\\\"warn\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"addAlgorithmForm.invalid\\\" (click)=\\\"submit()\\\">Add algorithm</button>\\r\\n  </mat-dialog-actions>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#add-algorithm form {\\n  margin: 20px 0; }\\n\\n#add-algorithm .mat-form-field {\\n  width: 340px; }\\n\\n#add-algorithm mat-error {\\n  margin-bottom: 30px; }\\n\\n#add-algorithm .message {\\n  margin-top: 20px; }\\n\\n#add-algorithm .params-show {\\n  display: flex;\\n  align-items: center;\\n  font-size: 18px; }\\n\\n#add-algorithm .added-params {\\n  margin-top: 20px;\\n  margin-left: 45px; }\\n\\n#add-algorithm .params-expand-icon {\\n  padding-top: 2px;\\n  font-size: 29px;\\n  padding-left: 5px;\\n  color: #311B92; }\\n\\n#add-algorithm .params-expand-icon:hover {\\n  cursor: pointer;\\n  color: #424242; }\\n\\n#add-algorithm .params-expanded {\\n  display: flex;\\n  justify-content: space-around;\\n  padding: 10px; }\\n\\n#add-algorithm .param-value {\\n  margin-right: 20px;\\n  word-break: break-word;\\n  width: 140px; }\\n\\n#add-algorithm .param-description {\\n  word-break: break-word;\\n  width: 140px; }\\n\\n#add-algorithm .param-value > strong, #add-algorithm .param-description > strong {\\n  color: #311B92; }\\n\\n#add-algorithm .unselect-icon {\\n  color: #FF3D00;\\n  height: 18px;\\n  font-size: 20px;\\n  margin-right: 3px;\\n  font-weight: 600; }\\n\\n#add-algorithm .unselect-icon:hover {\\n  cursor: pointer;\\n  color: #424242; }\\n\\n#add-algorithm mat-dialog-actions {\\n  float: right; }\\n\\n#add-algorithm mat-dialog-actions > button {\\n  margin-top: 30px;\\n  margin-left: 15px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '../../../../node_modules/@angular/forms';\r\nimport { AddAlgorithmService } from './add-algorithm.service';\r\nimport { SnackBarService } from '../../shared/services/snackbar.service';\r\nimport { MatDialogRef } from '../../../../node_modules/@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-add-algorithm',\r\n  templateUrl: './add-algorithm.component.html',\r\n  styleUrls: ['./add-algorithm.component.scss']\r\n})\r\nexport class AddAlgorithmComponent implements OnInit {\r\n\r\n  addAlgorithmForm: FormGroup;\r\n  parameters: any = [];\r\n  addParametersForm: FormGroup;\r\n  message: boolean = false;\r\n  expand: boolean = false;\r\n  selectedParam: number;\r\n\r\n  constructor(public fb: FormBuilder, public service: AddAlgorithmService, public snackbar: SnackBarService, private dialogRef: MatDialogRef<AddAlgorithmComponent>) { }\r\n\r\n  // Add Parameter\r\n  addParameter() {\r\n    if (this.parameters.length > 0) {\r\n      for (let i = 0; i < this.parameters.length; i++) {\r\n        if (this.addParametersForm.value['parameterName'] == this.parameters[i]['parameterName']) {\r\n          return this.message = true;\r\n        }\r\n        else this.message = false;\r\n      }\r\n    }\r\n    if (!this.message) {\r\n      this.parameters.push(this.addParametersForm.value);\r\n      console.log(this.parameters);\r\n    }\r\n  }\r\n  // Remove Param\r\n  removeJobParam(param, index) {\r\n    this.parameters.splice(index, 1)\r\n  }\r\n\r\n  // Expand Param Info\r\n  expandParamsInfo(i) {\r\n    this.expand = !this.expand;\r\n\r\n    if (this.expand) this.selectedParam = i;\r\n    else this.selectedParam = null;\r\n\r\n  }\r\n\r\n  // SUBIMT FUNCTION\r\n  submit() {\r\n    console.log(this.addAlgorithmForm.value);\r\n    this.addAlgorithmForm.value['parameters'] = this.parameters;\r\n\r\n    this.service.addAlgorithm(this.addAlgorithmForm.value)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.dialogRef.close();\r\n          this.snackbar.openSnackBar('Algorithm added successfully.', 'Success');\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.addParametersForm = new FormGroup({\r\n      parameterName: new FormControl('', Validators.required),\r\n      parameterValueType: new FormControl('', Validators.required),\r\n      defaultValue: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addAlgorithmForm = this.fb.group({\r\n      algorithmName: ['', Validators.required],\r\n      library: ['', Validators.required],\r\n      description: ['']\r\n    });\r\n  }\r\n\r\n  // FORM GETTERS\r\n  get algorithmName() {\r\n    return this.addAlgorithmForm.get('algorithmName');\r\n  }\r\n  get library() {\r\n    return this.addAlgorithmForm.get('library');\r\n  }\r\n  get description() {\r\n    return this.addAlgorithmForm.get('description');\r\n  }\r\n  get parameterName() {\r\n    return this.addParametersForm.get('parameterName');\r\n  }\r\n  get parameterValueType() {\r\n    return this.addParametersForm.get('parameterValueType');\r\n  }\r\n  get defaultValue() {\r\n    return this.addParametersForm.get('defaultValue');\r\n  }\r\n\r\n}\r\n","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddAlgorithmService {\r\n\r\n    constructor(private _http: Http) { }\r\n\r\n    baseUrl = 'rest/algorithms';\r\n\r\n    addAlgorithm(obj): Observable<any> {\r\n        return this._http.post(this.baseUrl, obj);\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"addDataset\\\">\\r\\n    <h1>Add Dataset </h1>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-dialog-content>\\r\\n        <form [formGroup]=\\\"datasetForm\\\" (ngSubmit)=\\\"addDataset()\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Dataset name\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"name\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"datasetForm.get('name').touched && datasetForm.get('name').hasError('required')\\\">\\r\\n                Name is required!\\r\\n            </mat-error>\\r\\n            <mat-form-field>\\r\\n                <input matInput formControlName=\\\"description\\\" type=\\\"text\\\" placeholder=\\\"Dataset description\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"description\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"datasetForm.get('description').touched && datasetForm.get('description').hasError('required')\\\">\\r\\n                Description is required!\\r\\n            </mat-error>\\r\\n            <mat-dialog-actions class=\\\"buttons\\\">\\r\\n                <label class=\\\"btn btn-default btn-file\\\">\\r\\n                  {{csvFileButton}}\\r\\n                  <input style=\\\"display: none;\\\" formControlName=\\\"csv\\\" type=\\\"file\\\" accept=\\\".csv\\\" (change)=\\\"handleCSVFile($event.target.files)\\\">\\r\\n                </label>\\r\\n                <button type=\\\"submit\\\" mat-raised-button [disabled]=\\\"datasetForm.invalid\\\">Add dataset</button>\\r\\n            </mat-dialog-actions>\\r\\n        </form>\\r\\n    </mat-dialog-content>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#addDataset {\\n  display: flex;\\n  flex-direction: column;\\n  padding-right: 20px; }\\n\\n#addDataset .mat-form-field {\\n    width: 100%;\\n    padding: 10px 10px 10px 10px; }\\n\\n#addDataset .mat-dialog-content {\\n    height: 300px; }\\n\\n#addDataset .buttons {\\n    float: right; }\\n\\n#addDataset .btn-file {\\n    position: relative;\\n    overflow: hidden;\\n    background: #311B92;\\n    margin-right: 10px;\\n    color: white;\\n    padding: 15px; }\\n\\n#addDataset .btn-file input[type=file] {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    min-width: 100%;\\n    min-height: 100%;\\n    font-size: 100px;\\n    text-align: right;\\n    filter: alpha(opacity=0);\\n    opacity: 0;\\n    outline: none;\\n    color: white;\\n    background: #311B92;\\n    cursor: inherit;\\n    display: block; }\\n\\n#addDataset button {\\n    background: #311B92;\\n    color: white; }\\n\\n#addDataset button:disabled,\\n  #addDataset button[disabled] {\\n    background-color: #cccccc;\\n    color: black; }\\n\\n#addDataset h1 {\\n    text-align: center; }\\n\\n#addDataset .mat-error {\\n    padding-left: 10px;\\n    margin-top: -20px; }\\n\\n#addDataset .mat-dialog-content {\\n    margin-top: 50px;\\n    margin-bottom: 20px;\\n    display: block;\\n    padding: 0 24px;\\n    max-height: 65vh;\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch; }\\n\"","import { DatasetService } from './../../dataset/dataset.service';\r\nimport { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { SnackBarService } from '../../shared/services/snackbar.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-dataset',\r\n  templateUrl: './add-dataset.component.html',\r\n  styleUrls: ['./add-dataset.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AddDatasetComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddDatasetComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _formBuilder: FormBuilder\r\n    , private _datasetService: DatasetService, private _snackBarService: SnackBarService) { }\r\n\r\n  private name;\r\n  private description;\r\n  private csvFile;\r\n  private csvFileButton = 'Browse for .csv file';\r\n  private datasetForm: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.datasetForm = this._formBuilder.group({\r\n      description: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      csv: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  handleCSVFile(files: FileList) {\r\n    this.csvFile = files[0];\r\n    this.csvFileButton = files[0].name + ' Size:' + files[0].size;\r\n  }\r\n\r\n  addDataset() {\r\n    const datasetObj = {\r\n      name: this.name,\r\n      description: this.description,\r\n      filename: null,\r\n      database: null,\r\n      schema: null,\r\n      dbQuery: null,\r\n      originalDataset: null,\r\n      project: null,\r\n      variables:null,\r\n      derivedDatasets:null\r\n    }\r\n    let formData: FormData = new FormData();\r\n    formData.append('csvFile', this.csvFile);\r\n    formData.append('dataset', new Blob([JSON.stringify(datasetObj)],\r\n      {\r\n        type: \"application/json\"\r\n      }));\r\n    this._datasetService.addDataset(formData).subscribe(res => {\r\n    }, err => { \r\n     },()=>{\r\n      this.dialogRef.close();\r\n      this._snackBarService.openSnackBar('Success', 'You have successfuly added dataset!');\r\n     });\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- ONE VALUE -->\\r\\n<div *ngIf=\\\"data && data.type == 'addValueDialog'\\\" id=\\\"addValue\\\">\\r\\n    <h1>Add Value for parameter </h1>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-dialog-content>\\r\\n        <form [formGroup]=\\\"addValueForm\\\" (ngSubmit)=\\\"addValue()\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput formControlName=\\\"value\\\" type=\\\"text\\\" placeholder=\\\"Enter value\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"data.value\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"addValueForm.get('value').touched && addValueForm.get('value').hasError('required')\\\">\\r\\n                Value is required!\\r\\n            </mat-error>\\r\\n            <mat-dialog-actions>\\r\\n                <button mat-dialog-close mat-stroked-button color=\\\"warn\\\">Cancel</button>\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" mat-raised-button [disabled]=\\\"addValueForm.invalid\\\">Save</button>\\r\\n            </mat-dialog-actions>\\r\\n        </form>\\r\\n    </mat-dialog-content>\\r\\n</div>\\r\\n\\r\\n<!-- MULTIPLE VALUES -->\\r\\n<div id=\\\"editParams\\\" class=\\\"flex column center dialog\\\" *ngIf=\\\"data && data.type == 'editParams'\\\">\\r\\n    <table mat-table [dataSource]=\\\"data.data\\\" class=\\\"params-table mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"parameterName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Parameter Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.parameterName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"parameterValueType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Parameter Value Type </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.parameterValueType}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"parameterValue\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Parameter Value </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n                <mat-form-field>\\r\\n                    <input (ngModelChange)=\\\"inputChanged($event, i)\\\" matInput type=\\\"text\\\" placeholder=\\\"Enter value\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"element.parameterValues[0] != null ? element.parameterValues[0].value : element.parameterValues[0].value\\\">\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-error *ngIf=\\\"error\\\">\\r\\n        Value is required.\\r\\n    </mat-error>\\r\\n    <mat-dialog-actions>\\r\\n        <button mat-dialog-close mat-stroked-button color=\\\"warn\\\">Cancel</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveParams()\\\" mat-raised-button>Save</button>\\r\\n    </mat-dialog-actions>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#addValue {\\n  display: flex;\\n  flex-direction: column;\\n  padding-right: 20px; }\\n\\n#addValue .mat-form-field {\\n    width: 100%;\\n    padding: 10px 10px 10px 10px; }\\n\\n#addValue h1 {\\n    text-align: center; }\\n\\n#addValue .mat-error {\\n    padding-left: 10px;\\n    margin-top: -20px; }\\n\\n#addValue .mat-dialog-content {\\n    margin-top: 50px;\\n    margin-bottom: 20px;\\n    display: block;\\n    padding: 0 24px;\\n    max-height: 65vh;\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch; }\\n\\n#addValue .dialog {\\n    padding: 30px; }\\n\\n#addValue mat-dialog-actions {\\n    float: right;\\n    margin: 10px 30px 0 !important; }\\n\\n#addValue mat-dialog-actions > button {\\n    margin: 0 5px !important; }\\n\\n#editParams mat-dialog-actions {\\n  align-self: flex-end !important;\\n  margin: 10px 30px 0 !important; }\\n\\n#editParams mat-dialog-actions > button {\\n  margin: 0 5px !important; }\\n\\n#editParams .params-table {\\n  margin: 45px; }\\n\"","import { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-value',\r\n  templateUrl: './add-value.component.html',\r\n  styleUrls: ['./add-value.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AddValueComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddValueComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _formBuilder: FormBuilder) { }\r\n\r\n  private addValueForm: FormGroup;\r\n  private displayedColumns: string[] = ['parameterName', 'parameterValueType', 'parameterValue'];\r\n  private error: boolean = false;\r\n\r\n\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n    if (this.data.type == 'addValueDialog') {\r\n      this.addValueForm = this._formBuilder.group({\r\n        value: ['', Validators.required]\r\n      });\r\n    }\r\n    if (this.data.type == 'editParams') {\r\n\r\n    }\r\n  }\r\n  inputChanged(ev, i) {\r\n    this.data.data[i].parameterValues[0].value = ev;\r\n  }\r\n\r\n  saveParams() {\r\n    let checkArray = [];\r\n\r\n    for (let i = 0; i < this.data.data.length; i++) {\r\n      if (!this.data.data[i].parameterValues[0].value) {\r\n        this.error = true;\r\n      }\r\n      else {\r\n        checkArray.push(1);\r\n      }\r\n    }\r\n    if (checkArray.length == this.data.data.length) {\r\n      this.error = false;\r\n      this.dialogRef.close(this.data.data);\r\n    }\r\n  }\r\n\r\n  addValue() {\r\n    if (this.addValueForm.value) this.dialogRef.close(this.addValueForm.value);\r\n    else this.dialogRef.close(this.data.value);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div id=\\\"addProject\\\">\\r\\n  <h1 class=\\\"subtitle\\\" mat-dialog-title>Create Project</h1>\\r\\n  <form class=\\\"flex column\\\" [formGroup]=\\\"addProjectForm\\\" (ngSubmit)=\\\"addProject()\\\" autocomplete=\\\"off\\\">\\r\\n    <mat-dialog-content class=\\\"flex\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"projectName\\\" placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"description-field\\\" appearance=\\\"outline\\\">\\r\\n        <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n      <button mat-stroked-button color=\\\"warn\\\" mat-dialog-close (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button>Create</button>\\r\\n    </mat-dialog-actions>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"#addProject form {\\n  margin: 20px 0; }\\n\\n#addProject .mat-form-field {\\n  width: 40%; }\\n\\n#addProject .description-field {\\n  margin-left: 50px; }\\n\\n#addProject mat-dialog-actions {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n#addProject mat-dialog-actions > button {\\n  margin-top: 30px;\\n  margin-left: 15px; }\\n\"","import { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormControl, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AddProjectService } from './addProject.service';\r\nimport { SnackBarService } from './../../shared/services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AddComponent implements OnInit {\r\n  addProjectForm: FormGroup;\r\n  project: any;\r\n  constructor(\r\n    public addProjectService: AddProjectService,\r\n    public dialogRef: MatDialogRef<AddComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public formBuilder: FormBuilder,\r\n    public snackbar: SnackBarService\r\n  ) {}\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  addProject() {\r\n    const project = this.addProjectForm.value;\r\n    console.log(project);\r\n    this.addProjectService.addProject(project).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.snackbar.openSnackBar(res['data'], 'Success');\r\n        this.dialogRef.close();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n      }\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.addProjectForm = this.formBuilder.group({\r\n      projectName: [''],\r\n      description: ['']\r\n    });\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AddProjectService {\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  baseUrl = '/CustomerProfiling/rest/';\r\n\r\n\r\n  addProject(project): Observable<any> {\r\n    return this._http.post(this.baseUrl + 'projects', project);\r\n  }\r\n  // getEvents(): Observable<any> {\r\n  //   return this._http.get(this.baseUrl + 'events');\r\n  // }\r\n  // editJobs(obj): Observable<any> {\r\n  //   return this._http.put(this.baseUrl + 'events', obj);\r\n  // }\r\n  // getJobs(): Observable<any> {\r\n  //   return this._http.get(this.baseUrl + 'events');\r\n  // }\r\n}\r\n","module.exports = \"<div id=\\\"copyProject\\\">\\r\\n  <h1 class=\\\"subtitle\\\" mat-dialog-title>Copy Project</h1>\\r\\n  <form class=\\\"flex column\\\" #copyProjectForm=\\\"ngForm\\\">\\r\\n    <mat-dialog-content class=\\\"flex\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput name=\\\"projectName\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.projectName\\\" placeholder=\\\"New Project Name\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"description-field\\\" appearance=\\\"outline\\\">\\r\\n        <textarea matInput name=\\\"description\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.description\\\" placeholder=\\\"Previous aproject Text\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n      <button mat-stroked-button color=\\\"warn\\\" mat-dialog-close (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"copyProject(copyProjectForm.value)\\\">Create project</button>\\r\\n    </mat-dialog-actions>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"#copyProject form {\\n  margin: 20px 0; }\\n\\n#copyProject .mat-form-field {\\n  width: 40%; }\\n\\n#copyProject .description-field {\\n  margin-left: 50px; }\\n\\n#copyProject mat-dialog-actions {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n#copyProject mat-dialog-actions > button {\\n  margin-top: 30px;\\n  margin-left: 15px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CopyProjectService } from './copyProject.service';\r\nimport { SnackBarService } from './../../shared/services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-copy',\r\n  templateUrl: './copy.component.html',\r\n  styleUrls: ['./copy.component.scss']\r\n})\r\nexport class CopyComponent implements OnInit {\r\n  selected = 'option2';\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CopyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public copyProjectService: CopyProjectService,\r\n    public snackbar: SnackBarService\r\n  ) {}\r\n  copyProject(obj) {\r\n    obj['id'] = this.data.id;\r\n    console.log(obj);\r\n    this.copyProjectService.copyProjects(obj).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.snackbar.openSnackBar(res['data'], 'Success');\r\n        this.dialogRef.close();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n      }\r\n    );\r\n  }\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CopyProjectService {\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  baseUrl = '/CustomerProfiling/rest/projects/';\r\n\r\n  copyProjects(obj): Observable<any> {\r\n    return this._http.post(this.baseUrl + 'copy', obj);\r\n  }\r\n}\r\n","module.exports = \"<div id=\\\"data-tab-view\\\">\\r\\n    <h2 mat-dialog-title class=\\\"subtitle\\\">DATASET - Pre Processing VIEW</h2>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-dialog-content>\\r\\n        <div id=\\\"csv_data_table\\\"></div>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n        <button mat-stroked-button color=\\\"primary\\\" mat-dialog-close>Close</button>\\r\\n    </mat-dialog-actions>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#data-tab-view .title-bar {\\n  margin-bottom: 20px; }\\n\\n#data-tab-view .processing-title {\\n  color: #311B92;\\n  margin-top: 20px;\\n  font-size: 18px;\\n  width: 158px;\\n  font-weight: bold; }\\n\\n#data-tab-view .variable-items > span {\\n  width: 150px;\\n  padding: 20px 0;\\n  font-size: 16px;\\n  display: flex;\\n  align-items: center; }\\n\\n#data-tab-view .minmax > span {\\n  margin-right: 15px; }\\n\\n#data-tab-view mat-dialog-actions {\\n  float: right; }\\n\\n#data-tab-view button {\\n  margin-top: 30px; }\\n\\n#data-tab-view #csv_data_table {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 30px 0; }\\n\\n#data-tab-view table {\\n  border-collapse: collapse;\\n  border: 1px #757575 solid;\\n  font: 17px; }\\n\\n#data-tab-view th, #data-tab-view tr {\\n  padding: 10px 5px; }\\n\\n#data-tab-view td {\\n  border: 1px #757575 solid;\\n  padding: 5px; }\\n\"","import { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'data-tab-view',\r\n    templateUrl: './data-tab-view.component.html',\r\n    styleUrls: ['./data-tab-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DataTabViewComponent implements OnInit {\r\n\r\n    constructor(public dialogRef: MatDialogRef<DataTabViewComponent>, @Inject(MAT_DIALOG_DATA) public csv_data: any) { }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        if (this.csv_data.length > 0) {\r\n            // CSV TO TABLE\r\n            let csv_data = this.csv_data.split(/\\r?\\n|\\r/);\r\n            let table_data = '<table class=\"table table-bordered table-striped\">';\r\n            for (let count = 0; count < csv_data.length; count++) {\r\n                let cell_data = csv_data[count].split(\",\");\r\n                table_data += '<tr>';\r\n                for (let cell_count = 0; cell_count < cell_data.length; cell_count++) {\r\n                    if (count === 0) {\r\n                        table_data += '<th>' + cell_data[cell_count] + '</th>';\r\n                    }\r\n                    else {\r\n                        table_data += '<td>' + cell_data[cell_count] + '</td>';\r\n                    }\r\n                }\r\n                table_data += '</tr>';\r\n            }\r\n            table_data += '</table>';\r\n            document.getElementById('csv_data_table').innerHTML = table_data;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"datasetDetail\\\">\\r\\n    <mat-dialog-title>\\r\\n        <h1>Dataset detail </h1>\\r\\n        <mat-divider></mat-divider>\\r\\n    </mat-dialog-title>\\r\\n    <mat-dialog-content>\\r\\n        <form>\\r\\n            <div class=\\\"column\\\">\\r\\n                <label>Dataset Name:\\r\\n                    <span>{{data.datasetName}}</span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <label>Number of rows:\\r\\n                    <span>{{data.numberOfRows}}</span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <label>Number of Variables:\\r\\n                    <span>{{data.numberOfVariables}}</span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <label>Dataset Size:\\r\\n                    <span>{{data.datasetSize}} KB</span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <label>Dataset description:\\r\\n                    <span>{{data.datasetDesc}}</span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <!-- List of Projects -->\\r\\n            <div class=\\\"column\\\" *ngIf=\\\"data.listProjects.length > 0;else noData\\\">\\r\\n                <label class=\\\"inline\\\">Project Associated</label>\\r\\n                <br>\\r\\n                <div class=\\\"flex column-style header-style\\\">\\r\\n                    <span>Project Name</span>\\r\\n                    <span>Description</span>\\r\\n                    <span>Status</span>\\r\\n                    <span>Creation Date</span>\\r\\n                    <span>Last Opened</span>\\r\\n                </div>\\r\\n                <div class=\\\"flex\\\" *ngFor=\\\"let item of data.listProjects; let i = index\\\">\\r\\n                    <div class=\\\"flex column-style\\\">\\r\\n                        <span>{{item.projectName}}</span>\\r\\n                        <span>{{item.description}}</span>\\r\\n                        <span>{{item.status}}</span>\\r\\n                        <span>{{item.creationDate}}</span>\\r\\n                        <span>{{item.lastOpened}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <ng-template #noData>\\r\\n                    <span>No data.</span>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n            <!-- List of VARIABLES -->\\r\\n            <div class=\\\"column\\\" *ngIf=\\\"data.variableDetails.length > 0;else noData\\\">\\r\\n                <label class=\\\"inline\\\">List of variables</label>\\r\\n                <br>\\r\\n                <div class=\\\"flex column-style header-style\\\">\\r\\n                    <span>Variable Name</span>\\r\\n                    <span>Distinct Count</span>\\r\\n                    <span>Min</span>\\r\\n                    <span>Max</span>\\r\\n                    <span>Average</span>\\r\\n                    <span>Variance</span>\\r\\n                </div>\\r\\n                <div class=\\\"flex  column-style\\\" *ngFor=\\\"let item of data.variableDetails; let i = index\\\">\\r\\n                    <span>{{item.variableName}}</span>\\r\\n                    <span>{{item.distinctCount}}</span>\\r\\n                    <span>{{item.min}}</span>\\r\\n                    <span>{{item.max}}</span>\\r\\n                    <span>{{item.average}}</span>\\r\\n                    <span>{{item.variance}}</span>\\r\\n                </div>\\r\\n                <ng-template #noData>\\r\\n                    <span>No data.</span>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-dialog-content>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n.column {\\n  width: 100%;\\n  padding-bottom: 20px;\\n  padding-top: 20px;\\n  font-size: 17px;\\n  font-weight: bolder; }\\n\\nh1 {\\n  text-align: center; }\\n\\n.inline {\\n  display: inline-flex; }\\n\\nspan {\\n  font-weight: normal;\\n  padding-left: 10px; }\\n\\n.header-style {\\n  color: #7C4DFF;\\n  font-weight: bold;\\n  font-size: 17px;\\n  margin: 10px 0; }\\n\\n.column-style > span {\\n  width: 170px; }\\n\"","import { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dataset-detail',\r\n  templateUrl: './dataset-detail.component.html',\r\n  styleUrls: ['./dataset-detail.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatasetDetailComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DatasetDetailComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"deleteDialog\\\">\\r\\n    <h2 class=\\\"dialog-title\\\">Delete </h2>\\r\\n    <mat-dialog-content>Are you sure you want to delete {{data.projectName}}?</mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n        <button mat-button mat-dialog-close (click)=\\\"cancel()\\\">Cancel</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"true\\\">Yes</button>\\r\\n    </mat-dialog-actions>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.scss']\r\n})\r\nexport class DeleteComponent {\r\n\r\n  constructor( public dialogRef: MatDialogRef<DeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    cancel(): void {\r\n      this.dialogRef.close();\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"edit-algorithm\\\">\\r\\n  <h1 class=\\\"subtitle\\\" mat-dialog-title>Edit Algorithm</h1>\\r\\n  <mat-divider></mat-divider>\\r\\n  <mat-dialog-content>\\r\\n    <!-- Form  -->\\r\\n    <form [formGroup]=\\\"addAlgorithmForm\\\" class=\\\"flex space-between\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"flex column\\\">\\r\\n        <h3 class=\\\"subtitle\\\">Basic Information</h3>\\r\\n        <!-- Name -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"algorithmName\\\" matInput placeholder=\\\"Algorithm Name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"algorithmName.touched && algorithmName.errors\\\">\\r\\n          <strong> You have to enter algorithm name.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Library -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"library\\\" matInput placeholder=\\\"Library\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"library.touched && library.errors\\\">\\r\\n          <strong> You have to enter library title.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Description -->\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <textarea formControlName=\\\"description\\\" matInput placeholder=\\\"Description\\\"></textarea>\\r\\n          <mat-hint>Enter algorithm description.</mat-hint>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n    <!-- P A R A M S -->\\r\\n    <div class=\\\"flex \\\">\\r\\n      <form [formGroup]=\\\"addParametersForm\\\" (ngSubmit)=\\\"addParameter()\\\" class=\\\"flex column\\\">\\r\\n        <h3 class=\\\"subtitle\\\">Add Algorithm Parameters</h3>\\r\\n        <!-- Param Name -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"parameterName\\\" matInput placeholder=\\\"Parameter Name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"parameterName.touched && parameterName.errors\\\">\\r\\n          <strong> You have to enter parameter name.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Param Type -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"parameterValueType\\\" matInput placeholder=\\\"Parameter Type\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"parameterValueType.touched && parameterValueType.errors\\\">\\r\\n          <strong> You have to enter parameter type.</strong>\\r\\n        </mat-error>\\r\\n        <!-- Param Value -->\\r\\n        <mat-form-field>\\r\\n          <input formControlName=\\\"defaultValue\\\" matInput placeholder=\\\"Default Value\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"defaultValue.touched && defaultValue.errors\\\">\\r\\n          <strong> You have to enter default value.</strong>\\r\\n        </mat-error>\\r\\n        <button type=\\\"submit\\\" mat-stroked-button color=\\\"warn\\\" [disabled]=\\\"addParametersForm.invalid\\\">Add Parameter</button>\\r\\n        <mat-error class=\\\"message\\\">\\r\\n          <strong *ngIf=\\\"message\\\"> You cannot enter paramaters with same name.</strong>\\r\\n        </mat-error>\\r\\n      </form>\\r\\n      <div class=\\\"flex column added-params\\\">\\r\\n        <h3 class=\\\"subtitle\\\"> Added Parameters</h3>\\r\\n        <div *ngFor=\\\"let param of parameters; let i = index\\\">\\r\\n          <span class=\\\"params-show\\\">\\r\\n            <mat-icon class=\\\"unselect-icon\\\" (click)=\\\"removeJobParam(param, i)\\\">close</mat-icon>\\r\\n            {{i+1}}. {{param.parameterName}}\\r\\n            <i *ngIf=\\\"selectedParam != i\\\" class=\\\"material-icons params-expand-icon\\\" (click)=\\\"expandParamsInfo(i)\\\">\\r\\n              expand_more\\r\\n            </i>\\r\\n            <i *ngIf=\\\"expand == true && selectedParam == i\\\" class=\\\"material-icons params-expand-icon\\\" (click)=\\\"expandParamsInfo(i)\\\">\\r\\n              expand_less\\r\\n            </i>\\r\\n          </span>\\r\\n          <div *ngIf=\\\"expand == true && selectedParam == i\\\">\\r\\n            <div class=\\\"params-expanded\\\">\\r\\n              <span class=\\\"param-value\\\">\\r\\n                <strong>Type: </strong>\\r\\n                <br> {{param.parameterValueType}}\\r\\n              </span>\\r\\n              <span class=\\\"param-description\\\">\\r\\n                <strong>Default Value: </strong>\\r\\n                <br> {{param.defaultValue}}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-dialog-content>\\r\\n  <mat-dialog-actions class=\\\"buttons\\\">\\r\\n    <button mat-stroked-button mat-dialog-close color=\\\"warn\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"addAlgorithmForm.invalid\\\" (click)=\\\"submit()\\\">Save</button>\\r\\n  </mat-dialog-actions>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#edit-algorithm form {\\n  margin: 20px 0; }\\n\\n#edit-algorithm .mat-form-field {\\n  width: 340px; }\\n\\n#edit-algorithm mat-error {\\n  margin-bottom: 30px; }\\n\\n#edit-algorithm .message {\\n  margin-top: 20px; }\\n\\n#edit-algorithm .params-show {\\n  display: flex;\\n  align-items: center;\\n  font-size: 18px; }\\n\\n#edit-algorithm .added-params {\\n  margin-top: 20px;\\n  margin-left: 45px; }\\n\\n#edit-algorithm .params-expand-icon {\\n  padding-top: 2px;\\n  font-size: 29px;\\n  padding-left: 5px;\\n  color: #311B92; }\\n\\n#edit-algorithm .params-expand-icon:hover {\\n  cursor: pointer;\\n  color: #424242; }\\n\\n#edit-algorithm .params-expanded {\\n  display: flex;\\n  justify-content: space-around;\\n  padding: 10px; }\\n\\n#edit-algorithm .param-value {\\n  margin-right: 20px;\\n  word-break: break-word;\\n  width: 140px; }\\n\\n#edit-algorithm .param-description {\\n  word-break: break-word;\\n  width: 140px; }\\n\\n#edit-algorithm .param-value > strong, #edit-algorithm .param-description > strong {\\n  color: #311B92; }\\n\\n#edit-algorithm .unselect-icon {\\n  color: #FF3D00;\\n  height: 18px;\\n  font-size: 20px;\\n  margin-right: 3px;\\n  font-weight: 600; }\\n\\n#edit-algorithm .unselect-icon:hover {\\n  cursor: pointer;\\n  color: #424242; }\\n\\n#edit-algorithm mat-dialog-actions {\\n  float: right; }\\n\\n#edit-algorithm mat-dialog-actions > button {\\n  margin-top: 30px;\\n  margin-left: 15px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '../../../../node_modules/@angular/forms';\r\nimport { EditAlgorithmService } from './edit-algorithm.service';\r\nimport { SnackBarService } from '../../shared/services/snackbar.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '../../../../node_modules/@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-edit-algorithm',\r\n  templateUrl: './edit-algorithm.component.html',\r\n  styleUrls: ['./edit-algorithm.component.scss']\r\n})\r\nexport class EditAlgorithmComponent implements OnInit {\r\n\r\n  addAlgorithmForm: FormGroup;\r\n  parameters: any = [];\r\n  addParametersForm: FormGroup;\r\n  message: boolean = false;\r\n  expand: boolean = false;\r\n  selectedParam: number;\r\n\r\n  constructor(public fb: FormBuilder, public service: EditAlgorithmService, public snackbar: SnackBarService, private dialogRef: MatDialogRef<EditAlgorithmComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  // Add Parameter\r\n  addParameter() {\r\n    if (this.parameters.length > 0) {\r\n      for (let i = 0; i < this.parameters.length; i++) {\r\n        if (this.addParametersForm.value['parameterName'] == this.parameters[i]['parameterName']) {\r\n          return this.message = true;\r\n        }\r\n        else this.message = false;\r\n      }\r\n    }\r\n    if (!this.message) {\r\n      this.parameters.push(this.addParametersForm.value);\r\n      console.log(this.parameters);\r\n    }\r\n  }\r\n  // Remove Param\r\n  removeJobParam(param, index) {\r\n    this.parameters.splice(index, 1)\r\n  }\r\n\r\n  // Expand Param Info\r\n  expandParamsInfo(i) {\r\n    this.expand = !this.expand;\r\n\r\n    if (this.expand) this.selectedParam = i;\r\n    else this.selectedParam = null;\r\n\r\n  }\r\n\r\n  // SUBIMT FUNCTION\r\n  submit() {\r\n    this.data['algorithmName'] = this.addAlgorithmForm.value['algorithmName'];\r\n    this.data['library'] = this.addAlgorithmForm.value['library'];\r\n    this.data['description'] = this.addAlgorithmForm.value['description'];\r\n    this.data['parameters'] = this.parameters;\r\n\r\n    // console.log(this.data);\r\n\r\n    this.service.editAlgorithm(this.data)\r\n      .subscribe(\r\n        res => {\r\n          // console.log(res);\r\n          this.dialogRef.close();\r\n          this.snackbar.openSnackBar(res['data'], 'Success');\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.snackbar.openSnackBar(err['data'], 'Error');\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.data) {\r\n      console.log(this.data);\r\n\r\n      this.parameters = this.data['parameters'];\r\n\r\n      this.addParametersForm = new FormGroup({\r\n        parameterName: new FormControl('', Validators.required),\r\n        parameterValueType: new FormControl('', Validators.required),\r\n        defaultValue: new FormControl('', Validators.required)\r\n      });\r\n\r\n      this.addAlgorithmForm = this.fb.group({\r\n        algorithmName: [this.data.algorithmName, Validators.required],\r\n        library: [this.data.library, Validators.required],\r\n        description: [this.data.description]\r\n      });\r\n    }\r\n  }\r\n\r\n  // FORM GETTERS\r\n  get algorithmName() {\r\n    return this.addAlgorithmForm.get('algorithmName');\r\n  }\r\n  get library() {\r\n    return this.addAlgorithmForm.get('library');\r\n  }\r\n  get description() {\r\n    return this.addAlgorithmForm.get('description');\r\n  }\r\n  get parameterName() {\r\n    return this.addParametersForm.get('parameterName');\r\n  }\r\n  get parameterValueType() {\r\n    return this.addParametersForm.get('parameterValueType');\r\n  }\r\n  get defaultValue() {\r\n    return this.addParametersForm.get('defaultValue');\r\n  }\r\n\r\n}\r\n","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EditAlgorithmService {\r\n\r\n    constructor(private _http: Http) { }\r\n\r\n    baseUrl = 'rest/algorithms/editAlgorithm';\r\n\r\n    editAlgorithm(obj) {\r\n        return this._http.put(this.baseUrl, obj).pipe(map(res => res.json()));\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"view-algorithm\\\" *ngIf=\\\"data\\\">\\r\\n  <h1 class=\\\"subtitle\\\" mat-dialog-title>View Algorithm</h1>\\r\\n  <mat-divider></mat-divider>\\r\\n  <!-- Dialog CONTENT -->\\r\\n  <mat-dialog-content>\\r\\n    <div class=\\\"flex center name\\\">\\r\\n      <h4>{{data.algorithmName}}</h4>\\r\\n    </div>\\r\\n    <div class=\\\"flex space-between wrap\\\">\\r\\n      <span class=\\\"description-library\\\">\\r\\n        <div class=\\\"data-title\\\">Description</div>\\r\\n        <div class=\\\"justify\\\"> {{data.description}}</div>\\r\\n      </span>\\r\\n      <span class=\\\"description-library\\\">\\r\\n        <div class=\\\"data-title\\\">Library</div>\\r\\n        {{data.library}}\\r\\n      </span>\\r\\n    </div>\\r\\n    <!-- List of Parameters -->\\r\\n    <div class=\\\"parameters \\\" *ngIf=\\\"data.parameters && data.parameters.length>0; else noData\\\">\\r\\n      <label class=\\\"data-title\\\">Parameters</label>\\r\\n      <br>\\r\\n      <div class=\\\"flex column-style header-style\\\">\\r\\n        <span>Parameter Name</span>\\r\\n        <span>Type</span>\\r\\n        <span>Value</span>\\r\\n      </div>\\r\\n      <div class=\\\"flex  column-style items-style\\\" *ngFor=\\\"let item of data.parameters\\\">\\r\\n        <span>{{item.parameterName}}</span>\\r\\n        <span>{{item.parameterValueType}}</span>\\r\\n        <span>{{item.defaultValue}}</span>\\r\\n      </div>\\r\\n      <ng-template #noData>\\r\\n        <span>No data.</span>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </mat-dialog-content>\\r\\n  <!-- Dialog ACTIONS -->\\r\\n  <mat-dialog-actions class=\\\"buttons\\\">\\r\\n    <button mat-stroked-button mat-dialog-close color=\\\"warn\\\">Close</button>\\r\\n  </mat-dialog-actions>\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#view-algorithm .data-title {\\n  color: #311B92;\\n  font-size: 18px;\\n  font-weight: bold;\\n  margin-bottom: 10px; }\\n\\n#view-algorithm .name {\\n  background-color: #311B92;\\n  color: #fff;\\n  font-size: 21px;\\n  margin: 20px 0; }\\n\\n#view-algorithm .description-library {\\n  border: 1px solid #311B92;\\n  padding: 20px;\\n  width: 42%;\\n  margin: 5px 0; }\\n\\n#view-algorithm .parameters {\\n  border: 1px solid #311B92;\\n  padding: 20px;\\n  margin: 10px 0; }\\n\\n#view-algorithm .header-style {\\n  color: #7C4DFF;\\n  font-weight: bold;\\n  font-size: 16px;\\n  margin: 10px 0; }\\n\\n#view-algorithm .column-style > span {\\n  width: 170px; }\\n\\n#view-algorithm .items-style > span {\\n  margin-left: 1px; }\\n\\n#view-algorithm mat-dialog-actions {\\n  float: right; }\\n\\n#view-algorithm button {\\n  margin: 20px 0; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '../../../../node_modules/@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-view-algorithm',\r\n  templateUrl: './view-algorithm.component.html',\r\n  styleUrls: ['./view-algorithm.component.scss']\r\n})\r\nexport class ViewAlgorithmComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ViewAlgorithmComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"loginCard\\\">\\r\\n    <mat-card-title>Login</mat-card-title>\\r\\n    <form class=\\\"loginForm\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n        <mat-form-field class=\\\"loginFormField\\\">\\r\\n            <input matInput placeholder=\\\"Username*\\\" formControlName=\\\"username\\\" [(ngModel)]=\\\"username\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"loginForm.get('username').touched && loginForm.get('username').hasError('required')\\\">\\r\\n            Username is required!\\r\\n        </mat-error>\\r\\n        <mat-form-field class=\\\"loginFormField\\\">\\r\\n            <input matInput placeholder=\\\"Password*\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"loginForm.get('password').touched && loginForm.get('password').hasError('required')\\\">\\r\\n            Password is required!\\r\\n        </mat-error>\\r\\n        <mat-card-actions class=\\\"loginActions\\\">\\r\\n            <button mat-button [disabled]=\\\"loginForm.invalid\\\">SIGN IN</button>\\r\\n            <button mat-button>SIGN UP</button>\\r\\n        </mat-card-actions>\\r\\n    </form>\\r\\n</mat-card>\"","module.exports = \".loginForm {\\n  width: 100%; }\\n\\n.loginFormField {\\n  width: 100%; }\\n\\n.loginCard {\\n  margin: 0px auto;\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin-top: 10%;\\n  margin-left: 15%;\\n  background: white !important;\\n  color: black !important; }\\n\\n.loginActions {\\n  margin-bottom: -15px; }\\n\"","import { AuthService } from './../shared/services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  private loginForm: FormGroup;\r\n  private username;\r\n  private password;\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _router: Router, private _auth: AuthService,private _snackBarService: SnackBarService) {\r\n    if (this._auth.isLoggedIn()) {\r\n      this._router.navigate(['/dashboard']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this._formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const loginObj = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    this._auth.login(loginObj).subscribe(\r\n      res => {\r\n      },\r\n      err => {\r\n        this._snackBarService.openSnackBar('Error', 'Wrong username or password!');\r\n      }, () => {\r\n        localStorage.setItem('username', loginObj.username);\r\n        this._router.navigate(['/dashboard']);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"one-project\\\" class=\\\"flex column center\\\">\\r\\n    <button (click)=\\\"backBtn()\\\" routerLink=\\\"/projects\\\" mat-stroked-button color=\\\"primary\\\" matTooltip=\\\"Back to list of projects\\\"\\r\\n        matTooltipPosition=\\\"right\\\">Back to Projects</button>\\r\\n    <mat-tab-group color=\\\"warn\\\" mat-stretch-tabs class=\\\"mat-elevation-z4\\\">\\r\\n        <mat-tab label=\\\"Project Overview\\\">\\r\\n            <ng-template matTabContent>\\r\\n                <app-project-overview (disableTabsChange)=\\\"disableTabsChange($event)\\\"></app-project-overview>\\r\\n            </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab [disabled]=\\\"disableTabs\\\" label=\\\"Data\\\">\\r\\n            <ng-template matTabContent>\\r\\n                <app-data-tab></app-data-tab>\\r\\n            </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab [disabled]=\\\"disableTabs\\\" label=\\\"Analyze\\\">\\r\\n            <ng-template matTabContent>\\r\\n                <app-analyze></app-analyze>\\r\\n            </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab [disabled]=\\\"disableTabs\\\" label=\\\"Question\\\">\\r\\n            <ng-template matTabContent>\\r\\n                <h1>Question</h1>\\r\\n                <p>...</p>\\r\\n            </ng-template>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</div>\"","module.exports = \"#one-project {\\n  padding: 50px 0; }\\n  #one-project mat-tab-group {\\n    width: 90%; }\\n  #one-project button {\\n    align-self: flex-start;\\n    margin-left: 5%;\\n    margin-bottom: 25px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SharedService } from '../shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-one-project',\r\n  templateUrl: './one-project.component.html',\r\n  styleUrls: ['./one-project.component.scss']\r\n})\r\nexport class OneProjectComponent implements OnInit {\r\n\r\n  constructor(public sharedService: SharedService) { }\r\n\r\n  disableTabs: boolean = true;\r\n\r\n  disableTabsChange(ev) {\r\n    this.disableTabs = ev;\r\n  }\r\n\r\n  backBtn() {\r\n    this.sharedService.resetValuesOneProject();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"projectOverview\\\">\\r\\n  <h1>Project overview</h1>\\r\\n  <mat-dialog-content *ngIf=\\\"project\\\">\\r\\n    <h4 class=\\\"subtitle\\\">Project details for project ID: {{project.id}}</h4>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Project name\\\" [(ngModel)]=\\\"project.projectName\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Project description\\\" [(ngModel)]=\\\"project.description\\\" autocomplete=\\\"off\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <div>Created: {{project.creationDate | date}}</div>\\r\\n    <div>Last opened:\\r\\n      <span *ngIf=\\\"project.lastOpened; else noData\\\"> {{project.lastOpened | date}}</span>\\r\\n      <ng-template #noData>\\r\\n        <i>No data.</i>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div>Projects status: {{project.status}}</div>\\r\\n    <mat-dialog-actions class=\\\"buttonsFirst\\\">\\r\\n      <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"editProject(project)\\\">Save</button>\\r\\n    </mat-dialog-actions>\\r\\n  </mat-dialog-content>\\r\\n  <mat-divider></mat-divider>\\r\\n  <!-- Select dataset -->\\r\\n  <mat-dialog-content>\\r\\n    <h4 class=\\\"subtitle\\\">Dataset details</h4>\\r\\n\\r\\n    <!-- za selektovanje dataseta -  nije zavrseno -->\\r\\n    <mat-form-field *ngIf=\\\"linked && dataset\\\">\\r\\n      <mat-select [disabled]=\\\"sharedService.getIsDatasetLinked()\\\" [(ngModel)]=\\\"datasetName\\\" (selectionChange)=\\\"selectedDataset($event)\\\"\\r\\n        placeholder=\\\"Select dataset\\\">\\r\\n        <mat-option *ngFor=\\\"let data of dataset; let i = index\\\" [value]=\\\"data.name\\\">{{data.name}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <div *ngIf=\\\"details && showDetails\\\">\\r\\n      <div class=\\\"details-item\\\">\\r\\n        <strong>Description: </strong>\\r\\n        {{details.datasetDesc}}\\r\\n      </div>\\r\\n      <div class=\\\"details-item\\\">\\r\\n        <strong>Dataset size: </strong>\\r\\n        {{details.datasetSize}} KB\\r\\n      </div>\\r\\n      <div class=\\\"details-item\\\">\\r\\n        <strong>Number of rows: </strong>\\r\\n        {{details.numberOfRows}}\\r\\n      </div>\\r\\n      <div class=\\\"details-item\\\">\\r\\n        <strong>Number of variables: </strong>\\r\\n        {{details.numberOfVariables}}\\r\\n      </div>\\r\\n      <br>\\r\\n      <!-- List of VARIABLES -->\\r\\n      <div class=\\\"column\\\" *ngIf=\\\"details.variableDetails.length > 0;else noData\\\">\\r\\n        <h4 class=\\\"subtitle\\\">Variable details</h4>\\r\\n        <br>\\r\\n        <div class=\\\"flex column-style header-style\\\">\\r\\n          <span>Name</span>\\r\\n          <span>Distinct Count</span>\\r\\n          <span>Min</span>\\r\\n          <span>Max</span>\\r\\n          <span>Average</span>\\r\\n          <span>Variance</span>\\r\\n        </div>\\r\\n        <div class=\\\"flex  column-style variables-data\\\" *ngFor=\\\"let item of  details.variableDetails; let i = index\\\">\\r\\n          <span>{{item.variableName}}</span>\\r\\n          <span>{{item.distinctCount}}</span>\\r\\n          <span>{{item.min}}</span>\\r\\n          <span>{{item.max}}</span>\\r\\n          <span>{{item.average}}</span>\\r\\n          <span>{{item.variance}}</span>\\r\\n        </div>\\r\\n        <ng-template #noData>\\r\\n          <span>No data.</span>\\r\\n        </ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n  <!-- Projects Properties -->\\r\\n  <h4 class=\\\"subtitle\\\">Project properties</h4>\\r\\n  <div class=\\\"cards\\\">\\r\\n    <mat-card *ngIf=\\\"algorithms\\\">\\r\\n      <mat-card-header>\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title>Algorithms</mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-divider></mat-divider>\\r\\n      <mat-card-content *ngFor=\\\"let algorithm of algorithms\\\">\\r\\n        <span>\\r\\n          <strong>Algorithm Name:</strong> {{algorithm.algorithmName}}</span>\\r\\n        <br>\\r\\n        <span>\\r\\n          <strong>Algorithm Description:</strong> {{algorithm.description}}</span>\\r\\n        <br>\\r\\n        <span>\\r\\n          <strong>Algorithm Library:</strong> {{algorithm.library}}</span>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title>Questions</mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <p>\\r\\n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes\\r\\n          very well with mountainous terrain, the Shiba Inu was originally bred for hunting.\\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#projectOverview {\\n  margin: 5% 15%; }\\n\\n#projectOverview mat-dialog-content {\\n    display: flex;\\n    flex-direction: column; }\\n\\n#projectOverview .buttonsFirst button {\\n    float: right; }\\n\\n#projectOverview .cards {\\n    margin-top: 50px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center; }\\n\\n#projectOverview mat-card {\\n    margin: 10px; }\\n\\n#projectOverview mat-card-content {\\n    margin-top: 10px; }\\n\\n#projectOverview mat-divider {\\n    margin: 10px 0; }\\n\\n#projectOverview h4 {\\n    color: #311B92; }\\n\\n#projectOverview .inline {\\n    display: inline-flex; }\\n\\n#projectOverview .header-style {\\n    color: #7C4DFF;\\n    font-weight: bold;\\n    font-size: 17px;\\n    margin: 10px 0; }\\n\\n#projectOverview .column-style > span {\\n    width: 170px; }\\n\\n#projectOverview .variables-data > span {\\n    padding-left: 2px; }\\n\"","import { Component, OnInit, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\r\nimport { ProjectOverviewService } from './project.overview.service';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\nimport { SharedService } from '../shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-project-overview',\r\n  templateUrl: './project-overview.component.html',\r\n  styleUrls: ['./project-overview.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProjectOverviewComponent implements OnInit {\r\n\r\n  @Output() disableTabsChange = new EventEmitter<boolean>();\r\n\r\n  selected = 'option2';\r\n  id: number;\r\n  dataset: any;\r\n  details: any;\r\n  showDetails: boolean = false;\r\n  project: any;\r\n  algorithms: any;\r\n  datasetId: number;\r\n  projectId: number;\r\n  selectedDatasetId: number;\r\n  datasetName: string;\r\n  linked: boolean;\r\n\r\n  constructor(public projectOverviewService: ProjectOverviewService, public snackbar: SnackBarService, public sharedService: SharedService) { }\r\n\r\n  getListOfAlgorithms() {\r\n    this.projectOverviewService.getListOfAlgorithms(this.projectId).subscribe(\r\n      res => {\r\n        this.algorithms = res.data;\r\n        // console.log(res);\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  getDataset() {\r\n    this.projectOverviewService.getDataset().subscribe(\r\n      res => {\r\n        this.dataset = res.data;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  isLinked() {\r\n    this.projectOverviewService.isLinked(this.projectId)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          if (res['data']['true'] && this.dataset) {\r\n            this.datasetId = res['data']['true'];\r\n\r\n            for (let i = 0; i < this.dataset.length; i++) {\r\n              if (this.dataset[i].id == this.datasetId) {\r\n                this.datasetName = this.dataset[i].name;\r\n                this.selectedDatasetId = this.dataset[i].id;\r\n\r\n                // Link Dataset to SHARED service\r\n                this.sharedService.setDatasetName(this.datasetName);\r\n                this.sharedService.setDatasetId(this.datasetId);\r\n                this.sharedService.setDatasetLink(true);\r\n\r\n                this.linked = true;\r\n                // Enable Tabs\r\n                this.disableTabsChange.emit(false);\r\n              }\r\n            }\r\n            console.log(this.datasetName);\r\n          }\r\n          else {\r\n            this.linked = true;\r\n          }\r\n        },\r\n        err => console.log(err)\r\n      );\r\n  }\r\n\r\n  editProject(obj) {\r\n    this.projectOverviewService.editProject(obj)\r\n      .subscribe(\r\n        res => {\r\n          // console.log(res);\r\n          this.snackbar.openSnackBar(res['data'], 'Success');\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n        }\r\n      );\r\n  }\r\n\r\n  selectedDataset(ev) {\r\n    if (ev.value) {\r\n      for (let i = 0; i < this.dataset.length; i++) {\r\n        if (this.dataset[i].name == ev.value) {\r\n          this.selectedDatasetId = this.dataset[i].id;\r\n          this.datasetName = this.dataset[i].name;\r\n        }\r\n      }\r\n      this.details = {};\r\n      this.showDetails = false;\r\n      // this.selectedDatasetId = ev.value.id;\r\n\r\n      this.projectOverviewService.getDatasetDetails(this.selectedDatasetId).subscribe(\r\n        res => {\r\n          this.showDetails = true;\r\n          this.details = res.data;\r\n          // console.log(this.details);\r\n\r\n          // Enable Tabs\r\n          this.disableTabsChange.emit(false);\r\n\r\n          // Link dataset\r\n          this.sharedService.setDatasetId(this.selectedDatasetId);\r\n          this.sharedService.setDatasetName(this.datasetName);\r\n\r\n          this.snackbar.openSnackBar('Dataset linked.', 'Success');\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.snackbar.openSnackBar('Something went wrong.', 'Error');\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      // Disable Tabs\r\n      this.disableTabsChange.emit(true);\r\n\r\n      // Link dataset\r\n      this.sharedService.setDatasetId(null);\r\n      this.sharedService.setDatasetName(null);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.linked = false;\r\n    this.projectId = this.sharedService.getProjectId();\r\n    this.datasetName = this.sharedService.getDatasetName();\r\n\r\n    this.projectOverviewService.getProject(this.projectId).subscribe(res => {\r\n      this.project = res.data;\r\n    });\r\n    this.getDataset();\r\n    this.getListOfAlgorithms();\r\n    this.isLinked();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ProjectOverviewService {\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  baseUrl = '/CustomerProfiling/rest/';\r\n\r\n  editProject(obj): Observable<any> {\r\n    return this._http.put(this.baseUrl + 'projects', obj);\r\n  }\r\n\r\n  getDataset(): Observable<any> {\r\n    return this._http.get(this.baseUrl + 'dataset');\r\n  }\r\n  getDatasetDetails(id): Observable<any> {\r\n    return this._http.get(this.baseUrl + 'dataset/' + id);\r\n  }\r\n  getListOfAlgorithms(id): Observable<any> {\r\n    return this._http.get(this.baseUrl + 'algorithms/project/' + id);\r\n  }\r\n  getProject(id): Observable<any> {\r\n    return this._http.get(this.baseUrl + 'projects/' + id);\r\n  }\r\n  // Check whether DATASET is linked to project\r\n  isLinked(projectId) {\r\n    return this._http.get(this.baseUrl + 'dataset/linkDataset?projectId=' + projectId);\r\n  }\r\n}\r\n","module.exports = \"<div id=\\\"projects\\\" class=\\\"flex column center\\\">\\r\\n    <div class=\\\"button-wrapper\\\">\\r\\n        <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"Create Project\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openAddDialog()\\\">\\r\\n            <i class=\\\"material-icons\\\">add</i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"projects\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Id </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.projectName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"creationDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Creation Date </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.creationDate | date}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"lastOpened\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Last Opened </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <span *ngIf=\\\"element.lastOpened; else noData\\\">\\r\\n                    {{element.lastOpened | date}}\\r\\n                </span>\\r\\n                <ng-template #noData>\\r\\n                    <i>No data.</i>\\r\\n                </ng-template>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n        </ng-container>\\r\\n        <!-- Actions -->\\r\\n        <ng-container matColumnDef=\\\"editing\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n                <div class=\\\"flex icons-wrapper\\\">\\r\\n                    <i color=\\\"warn\\\" matTooltip=\\\"Open Project\\\" matTooltipPosition=\\\"above\\\" class=\\\"material-icons table-icons\\\" (click)=\\\"openProject(element.id)\\\">\\r\\n                        open_in_new\\r\\n                    </i>\\r\\n                    <i matTooltip=\\\"Copy Project\\\" matTooltipPosition=\\\"above\\\" class=\\\"material-icons table-icons\\\" (click)=\\\"openCopyDialog(element, element.id)\\\">\\r\\n                        file_copy\\r\\n                    </i>\\r\\n                    <i color=\\\"warn\\\" matTooltip=\\\"Delete Project\\\" matTooltipPosition=\\\"above\\\" class=\\\"material-icons table-icons\\\" (click)=\\\"openDeleteDialog(element.id)\\\">\\r\\n                        delete\\r\\n                    </i>\\r\\n                </div>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <!-- <mat-paginator [length]=\\\"dataSource.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[1,5, 10, 25, 100]\\\"></mat-paginator> -->\\r\\n</div>\"","module.exports = \".flex {\\n  display: flex; }\\n\\n.column {\\n  flex-direction: column; }\\n\\n.center {\\n  align-items: center;\\n  justify-content: center; }\\n\\n.space-around {\\n  justify-content: space-around; }\\n\\n.space-between {\\n  justify-content: space-between; }\\n\\n.wrap {\\n  flex-wrap: wrap; }\\n\\n.align-items-center {\\n  align-items: center; }\\n\\n.justify {\\n  text-align: justify; }\\n\\n.subtitle {\\n  color: #757575; }\\n\\n.warn-message {\\n  color: #FF3D00;\\n  margin-top: 30px;\\n  font-size: 18px; }\\n\\n.navContainer {\\n  width: 100%;\\n  height: 89vh; }\\n\\n.sideContent {\\n  width: 20%; }\\n\\n.mainContent {\\n  width: 80%;\\n  margin-left: 20% !important; }\\n\\nmat-nav-list a mat-icon {\\n  padding-left: 25px; }\\n\\n.userDetail {\\n  padding-left: 40px;\\n  margin-bottom: 40px; }\\n\\n.logout {\\n  margin-top: 45vh; }\\n\\n.header {\\n  overflow: hidden;\\n  background: linear-gradient(to right, #311B92, #7C4DFF);\\n  padding: 20px 10px; }\\n\\n.header a {\\n  float: left;\\n  color: white;\\n  text-align: center;\\n  padding: 12px;\\n  text-decoration: none;\\n  font-size: 18px;\\n  line-height: 25px;\\n  border-radius: 4px; }\\n\\n.header a.logo {\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.mat-nav-list a.active {\\n  background: #EAFFD1; }\\n\\n.mat-nav-list a span {\\n  padding-left: 12px; }\\n\\nmat-icon {\\n  color: #311B92; }\\n\\n#projects table.mat-table {\\n  margin-top: 30px;\\n  width: 80%; }\\n\\n#projects tr.mat-header-row {\\n  background: linear-gradient(to right, #311B92, #7C4DFF); }\\n\\n#projects th.mat-header-cell {\\n  width: 250px;\\n  color: #fff; }\\n\\n#projects td.mat-cell {\\n  padding: 10px 10px 10px 0 !important; }\\n\\n#projects td.mat-cell:first-child, #projects td.mat-footer-cell:first-child, #projects th.mat-header-cell:first-child {\\n  padding-left: 24px !important; }\\n\\n#projects .button-wrapper {\\n  width: 80%;\\n  margin-top: 100px; }\\n\\n#projects .button-wrapper > button {\\n  float: right; }\\n\\n#projects .icons-wrapper {\\n  align-items: flex-start;\\n  justify-content: flex-start; }\\n\\n#projects .table-icons {\\n  color: #311B92;\\n  font-size: 23px;\\n  margin-right: 15px; }\\n\\n#projects .table-icons:hover {\\n  color: #FF3D00;\\n  cursor: pointer; }\\n\"","import { Router } from '@angular/router';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProjectsService } from './projects.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatPaginator, PageEvent, MatTableDataSource } from '@angular/material';\r\n// dialogs\r\nimport { AddComponent } from '../dialogs/addProject/add.component';\r\nimport { DeleteComponent } from '../dialogs/delete/delete.component';\r\nimport { CopyComponent } from '../dialogs/copyProject/copy.component';\r\n\r\nimport { SnackBarService } from './../shared/services/snackbar.service';\r\nimport { SharedService } from '../shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  // dataSource: any;\r\n  name: string;\r\n  data: any;\r\n  displayedColumns: string[] = ['id', 'name', 'creationDate', 'lastOpened', 'status', 'description', 'editing'];\r\n  projects: any;\r\n\r\n  constructor(public projectsService: ProjectsService, public dialog: MatDialog, public snackbar: SnackBarService, private _router: Router, public sharedService: SharedService) { }\r\n  private dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\r\n  paginator: MatPaginator;\r\n  @ViewChild(MatPaginator)\r\n  set datasourcePaginator(paginator: MatPaginator) {\r\n    this.paginator = paginator;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  // Get Projects\r\n  getProjects() {\r\n    this.projectsService.getProjects().subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.projects = res.data;\r\n        console.log(this.projects);\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  openProject(id) {\r\n    this.sharedService.setProjectId(id);\r\n    this._router.navigate(['/one-project']);\r\n  }\r\n\r\n  // open add dialog\r\n  openAddDialog() {\r\n    const dialogRef = this.dialog.open(AddComponent, {\r\n      width: '800px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.getProjects();\r\n    });\r\n  }\r\n\r\n  openCopyDialog(obj) {\r\n    const dialogRef = this.dialog.open(CopyComponent, {\r\n      width: '800px',\r\n      data: obj\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.getProjects();\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  // open delete dialog\r\n  openDeleteDialog(id) {\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      data: { id: id }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === true) {\r\n        this.projectsService.deleteProject(id).subscribe(\r\n          res => {\r\n            this.snackbar.openSnackBar(res['data'], 'Successful');\r\n            this.getProjects();\r\n          },\r\n          err => {\r\n            this.snackbar.openSnackBar(res['error']['message'], 'Error');\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    localStorage.removeItem('projectID');\r\n    this.getProjects();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ProjectsService {\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n     baseUrl = '/CustomerProfiling/rest/';\r\n\r\n    getProjects(): Observable<any> {\r\n        return this._http.get(this.baseUrl + 'projects');\r\n    }\r\n    deleteProject(id): Observable<any> {\r\n      return this._http.delete(this.baseUrl + 'projects/' + id);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private _auth: AuthService, private _router: Router) { }\r\n\r\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this._auth.isLoggedIn()) {\r\n      this._router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, DateAdapter } from '@angular/material';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatInputModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatTabsModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatSlideToggleModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatMenuModule,\r\n        MatTreeModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSortModule\r\n    ],\r\n    exports: [\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatInputModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatTabsModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatSlideToggleModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatMenuModule,\r\n        MatTreeModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSortModule\r\n    ],\r\n    declarations: [],\r\n    providers: [\r\n        { provide: MAT_DIALOG_DATA, useValue: [] }, MatDatepickerModule\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private _http: Http, private _router: Router) { }\r\n\r\n  public login(data) {\r\n    return this._http.post('authentication', data);\r\n  }\r\n\r\n  public logout() {\r\n    return this._http.post('logout', {});\r\n  }\r\n  isLoggedIn() {\r\n    if (localStorage.getItem('username') != null) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SharedService {\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////// \r\n    ////    This service has purpose to SET and GET       ////\r\n    ////     variables globally through application              ////\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // ToDo - Make global universal FUNCTION\r\n\r\n    projectId: number;\r\n    datasetId: number;\r\n    disableTabs: boolean = true;\r\n    datasetName: string;\r\n    isDatasetLinked: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    // PROJECT ID\r\n    setProjectId(projectId: number) {\r\n        this.projectId = projectId;\r\n    }\r\n\r\n    getProjectId() {\r\n        return this.projectId;\r\n    }\r\n\r\n    // DATASET ID\r\n    setDatasetId(id: number) {\r\n        this.datasetId = id;\r\n    }\r\n\r\n    getDatasetId() {\r\n        return this.datasetId;\r\n    }\r\n\r\n    // DATASET NAME\r\n    setDatasetName(name: string) {\r\n        this.datasetName = name;\r\n    }\r\n\r\n    getDatasetName() {\r\n        return this.datasetName;\r\n    }\r\n\r\n    // DATASET LINKED\r\n    setDatasetLink(isLinked: boolean) {\r\n        this.isDatasetLinked = isLinked;\r\n    }\r\n\r\n    getIsDatasetLinked() {\r\n        return this.isDatasetLinked;\r\n    }\r\n\r\n    // RESET VALUES - ONE PROJECT CMP\r\n    resetValuesOneProject() {\r\n        this.projectId = null;\r\n        this.datasetId = null;\r\n        this.disableTabs = true;\r\n        this.datasetName = null;\r\n        this.isDatasetLinked = false;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SnackBarService {\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}